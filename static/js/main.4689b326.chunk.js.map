{"version":3,"sources":["img/left.svg","img/indian4.png","redux/actionsCreators/games.actionCreators.js","redux/actions/games.actions.js","redux/actionsCreators/countriesActionCreators.js","redux/actions/countriesActions.js","Components/styles.function.js","Components/StyledComponents/Button.style.js","Components/Navbar/Header.style.js","Components/StyledComponents/StyledImg.js","Components/Logo/Logo.style.js","Components/Logo/Logo.js","Components/Navbar/Header.js","Pages/Countries/Countries.style.js","Components/Heading/Heading.style.js","Components/Heading/Heading.js","Pages/Countries/Country.js","Components/Select/Select.style.js","Components/Select/Select.js","Pages/Countries/Selectors/Selectors.js","Components/Pagination/Pagination.style.js","Components/SvgComponents/SvgComponents.style.js","Components/SvgComponents/LeftArrow.js","Components/SvgComponents/RightArrow.js","Components/Pagination/Pagination.js","Components/Loader/Loader.style.js","Components/Loader/Loader.js","redux/Selectors/countriesSelectors.js","Pages/Countries/Countries.js","Components/StyledComponents/CardWrapper.js","Components/Img.js","Components/StyledComponents/Wrappers.js","Components/StyledComponents/Span.style.js","Components/ListOfItems/ListOfItems.js","Pages/Countries/CountryDetail.js","Components/StyledComponents/AppWrapper.style.js","Pages/Games/Games.style.js","Components/Input/Input.style.js","Components/Input/Input.js","Components/Answer/Answer.style.js","Components/Answer/Answer.js","Components/Results/Results.style.js","Components/Results/Results.js","Components/Tips/Tips.style.js","Components/Tips/Tips.js","utils.js","redux/Selectors/gamesSelectors.js","Components/MaxResult/MaxResult.style.js","Components/MaxResult/MaxResult.js","Pages/Games/Games.js","Components/GlobalStyles.js","Components/themes.js","App.js","redux/reducers/countryReducer.js","redux/redux-utils.js","redux/reducers/gamesReducers.js","redux/store.js","index.js"],"names":["module","exports","setRandomCountry","payload","type","setCountryAnswer","answer","country","fetchData","setCountryLoading","fetchAndSetServerData","url","dispatch","axios","get","then","response","data","catch","error","console","log","fetchSingleCountry","name","region","population","flag","capital","borders","currencies","languages","timezones","area","setFlex","x","y","setShadow","linearGradient","setColor","color","setBorder","width","setTransition","property","time","timing","setGrid","minWidth","gap","display","sizes","xxlLarge","xlLarge","large","desktop","tablet","phone","Button","styled","button","bgColor","position","bgColorDis","ButtonWrapper","div","top","right","StyledHeader","header","StyledNavbar","nav","props","theme","secondaryColor","UlWrapper","ul","thirdColor","thirdColorHover","primaryColor","toggledMenu","NavbarButton","fourthColor","NavbarButtonWrapper","ToggledElem","ToggledWrapper","StyledImgWrapper","height","StyledImg","img","LogoImg","Logo","src","IndianLogo","Header","onChangeTheme","useState","setToggledMenu","toggleMenu","to","onClick","prevShowMenu","className","StyledListWrapper","tabled","StyledListElem","li","CountriespageWrapper","baseStyle","css","H1","h1","H2","h2","H3","h3","H4","h4","H5","h5","Heading","children","restProps","withRouter","history","push","alt","SelectWrapper","alignSelf","justifySelf","StyledSelect","select","Select","dataArray","selectSomething","optionsData","id","onChange","e","target","value","map","index","key","getOptions","SelectorsDashBoard","PageListWrapper","PageListElem","paginationColor","PaginationWrapper","MainPaginationWrapper","SvgElement","svg","LeftArrowSvg","navigate","xmlns","fill-rule","fill","clip-rule","stroke","d","Pagination","items","itemsQuantityOnPage","paginatedItems","currentPage","setCurrentPage","observedPage","setObservedPage","pages","Math","ceil","length","pagesList","Array","keys","LeftArrow","ArrowLength","page","filter","_","RightArrow","navigateForward","getItems","LoaderStyled","Loader","getCountries","state","countries","getLoading","countryLoading","CountriesMapState","useDispatch","setPaginatedItems","countriesList","useSelector","useEffect","quantity","indexElem","filteredCountries","useCallback","filteredItems","Selectors","CardWrapper","background","Img","Wrapper","flexDirection","InnerWrapper","GridWrapper","SpanWrapper","DetailInnerWrapper","ListOfItemsWrapper","OutputSpan","span","paddingLeft","CommonSpan","ListOfItems","array","singleElem","getSpan","elem","names","toLocaleString","connect","match","selectedCountry","currentCountry","params","displayCountry","AppWrapper","main","GamesWrapper","NewButton","AnswerMainWrapper","GamesImgWrapper","GamesMainWrapper","StyledInput","input","StyledInputWrapper","Input","getInputName","disabled","placeholder","AnswerWrapper","t","r","b","l","getPadding","Answer","param","toLowerCase","answerLowerCase","getAnswer","ResultsWrapper","GameStatistics","ResultSpan","Results","React","memo","answers","wrongAnswers","rightAnswers","totalAnswers","rate","gameStatus","renderResults","TipWrapper","TipInnerWrapper","Tips","getFilteredElem","arr","attr","includes","getTotalMax","createSelector","games","gamesArchive","obj","Object","values","sort","a","MaxResultWrapper","MaxResult","maxResult","getMaxResult","Games","getAnswerFromInput","randomCountry","getRandomCountry","countryAnswer","getCountryAnswer","getAnswers","getTotalAnswers","getRate","getGameStatus","isShowTips","setShow","beginNewGame","randomCountryValue","floor","random","getRandomData","prevShowTips","GlobalStyles","createGlobalStyle","themes","App","setTheme","shift","path","exact","component","Countries","CountryDetail","initialState","countryReducer","action","getRightAnswers","type1","type2","toFixed","getAnswerCount","INITIAL_STATE","gamesReducer","answersData","uuidv4","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,4KCC9BC,EAAmB,SAACC,GAC7B,MAAO,CAACC,KCDqB,qBDCKD,YAEzBE,EAAmB,SAACC,EAAOC,GACpC,MAAO,CAACH,KCLqB,qBDKKG,UAAQD,WECjCE,EAAW,SAACL,GACrB,MAAO,CAACC,KCNmB,kBDMGD,YAOrBM,EAAmB,SAACN,GAC7B,MAAO,CAACC,KCZkB,kBDYID,YAOrBO,EAAwB,SAACC,GAElC,OAAO,SAACC,GACJA,EAASH,GAAkB,IAEvBI,IAAMC,IAAIH,GACTI,MAAK,SAAAC,GACFJ,EAASJ,EAAUQ,EAASC,UAE/BC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,QAkBfG,EAAoB,SAACX,GAC9B,OAAO,SAACC,GACJA,EAASH,GAAkB,IAC3BI,IAAMC,IAAIH,GACTI,MAAK,SAAAC,GAAY,IAAD,cAEwFA,EAA9FC,KAFM,MAECM,EAFD,EAECA,KAAKC,EAFN,EAEMA,OAAOC,EAFb,EAEaA,WAAWC,EAFxB,EAEwBA,KAAKC,EAF7B,EAE6BA,QAAQC,EAFrC,EAEqCA,QAAQC,EAF7C,EAE6CA,WAAYC,EAFzD,EAEyDA,UAAWC,EAFpE,EAEoEA,UAAUC,EAF9E,EAE8EA,KAe3FpB,EA5DD,CAACR,KCTiB,gBDSGD,QA8CA,CAChBoB,OACAC,SACAC,aACAC,OACAC,UACAC,UACAG,YACAD,YACAD,aACAG,aAKLjB,MAAK,kBAAIH,EAASH,GAAkB,S,6BEvElCwB,EAAU,WAAsC,IAAD,yDAAP,GAAO,IAAnCC,SAAmC,MAA/B,SAA+B,MAArBC,SAAqB,MAAjB,SAAiB,EACxD,MAAM,iCAAN,OAAwCD,EAAxC,0BAA2DC,EAA3D,OAESC,EACF,+CADEA,EAEH,gDAFGA,EAII,sCASJC,EACF,iIADEA,EAED,kIAICC,EAAW,SAACC,GACzB,MAAM,SAAN,OAAgBA,GAAa,OAA7B,yBAGaC,EAAY,WAAmD,IAAD,yDAAN,GAAM,IAAhDC,aAAgD,MAA1C,MAA0C,MAAnCrC,YAAmC,MAA9B,QAA8B,MAArBmC,aAAqB,MAAf,QAAe,EAC1E,MAAM,WAAN,OAAkBE,EAAlB,YAA2BrC,EAA3B,YAAmCmC,IAQvBG,EAAgB,WAIjB,IAAD,yDAAP,GAAO,IAHTC,gBAGS,MAHE,MAGF,MAFTC,YAES,MAFF,OAEE,MADTC,cACS,MADA,cACA,EACT,MAAM,cAAN,OAAqBF,EAArB,YAAiCC,EAAjC,YAAyCC,IAI9BC,EAAU,WAAsC,IAAD,yDAAN,GAAM,KAAnCC,SAAmC,EAAlBC,YAAkB,MAAd,OAAc,EAC3D,MAAQ,CACNC,QAAQ,OACR,cAAe,SACf,gBAAiB,SACjB,WAAW,GAAX,OAAeD,KAqBLE,EAAQ,CAEnBC,SAAS,KACTC,QAAQ,KACRC,MAAO,KACPC,QAAS,IACTC,OAAQ,IACRC,MAAO,K,0wBC3EF,IAAMC,EAASC,IAAOC,OAAV,KAEC,qBAAEC,SAAuB,aACpC,qBAAErB,OAAmB,WAKf,qBAAEsB,UAAuB,YAQhB,qBAAEC,YAA6B,UAC9C,qBAAEvB,OAAmB,aAIhBwB,EAAgBL,IAAOM,IAAV,IAExBlB,IAGkBI,EAAMK,QASGG,YAAOD,EAAPC,CAAH,KAErB,qBAAEO,KAAY,UACd,qBAAEC,OAAgB,U,ivFC/BjB,IAAMC,EAAeT,IAAOU,OAAV,KAIZC,EAAeX,IAAOY,IAAV,IAGrBxB,KAMY,SAACyB,GAAD,OAAWA,EAAMC,MAAMC,iBAChBvB,EAAMK,QAQhBmB,EAAYhB,IAAOiB,GAAV,IAClB1C,KAWW,SAACsC,GAAD,OAAWA,EAAMC,MAAMI,cAErB,SAACL,GAAD,OAAWA,EAAMC,MAAMK,mBAGvB,SAACN,GAAD,OAAWA,EAAMC,MAAMK,kBAIjB3B,EAAMK,QAOX,SAACgB,GAAD,OAAWA,EAAMC,MAAMM,gBAKxB,qBAAEC,YAA4B,gBAAiB,uBAqBnDC,EAAetB,YAAOD,EAAPC,CAAH,KACH,SAACa,GAAD,OAAWA,EAAMC,MAAMM,gBAClC,SAACP,GAAD,OAAWA,EAAMC,MAAMS,eAGrBC,EAAsBxB,IAAOM,IAAV,IACTd,EAAMK,QAOhB4B,EAAczB,IAAOM,IAAV,KAeF,qBAAEe,YAA4B,gBAAgB,kBACtD,qBAAEA,YAA4B,MAAM,MAChC,qBAAEA,YAA4B,mCAAoC,2BAGjE,qBAAEA,YAA4B,OAAO,WACtC,qBAAEA,YAA4B,kCAAkC,wBAM/D,qBAAEA,YAA4B,OAAO,WAEtC,qBAAEA,YAA4B,oCAAqC,0BAKxEK,EAAiB1B,IAAOM,IAAV,IAiBJd,EAAMK,Q,iYCpJtB,IAAM8B,GAAmB3B,IAAOM,IAAV,MAEhB,qBAAEvB,OAAiB,WACtB,qBAAE6C,QAAmB,WACnB,qBAAEzB,UAAuB,YAQvB0B,GAAY7B,IAAO8B,IAAV,KACd,qBAAE/C,OAAiB,WAClB,qBAAE6C,QAAmB,W,qICZxB,IAAMG,GAAU/B,YAAO6B,GAAP7B,CAAH,KACCR,EAAMK,QCUZmC,GAVF,SAAC,GAAqB,IAApBjD,EAAmB,EAAnBA,MAAO6C,EAAY,EAAZA,OAClB,OACI,kBAACD,GAAD,CAAkB5C,MAASA,EAAO6C,OAAUA,GACxC,kBAACG,GAAD,CAASE,IAAOC,IAAYnD,MAASA,EAAO6C,OAAUA,MCsDnDO,GAjDA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACEC,oBAAS,GADX,mBAC7BhB,EAD6B,KAChBiB,EADgB,KAO9BC,EAAa,WACjBD,GAAe,IAGjB,OACE,kBAAC7B,EAAD,KACE,kBAACE,EAAD,KACE,kBAAC,GAAD,CAAM5B,MAAM,OAAO6C,OAAO,SAC1B,kBAACZ,EAAD,CAAWK,YAAaA,GACtB,4BACE,kBAAC,IAAD,CAASmB,GAAG,aAAaC,QAASF,GAAlC,kBAIF,4BACE,kBAAC,IAAD,CAASC,GAAG,SAASC,QAASF,GAA9B,eAMJ,kBAACf,EAAD,KACE,kBAACF,EAAD,CAAcmB,QAASL,EAAejC,SAAS,YAA/C,UAIF,kBAACuB,EAAD,CAAgBe,QA9BL,WACfH,GAAe,SAACI,GAAD,OAAmBA,OA8B5B,kBAACjB,EAAD,CACEkB,UAAU,YACVtB,YAAaA,IACf,kBAACI,EAAD,CACEkB,UAAU,YACVtB,YAAaA,IACf,kBAACI,EAAD,CACEkB,UAAU,YACVtB,YAAaA,Q,uhCCpDlB,IAAMuB,GAAoB5C,IAAOiB,GAAV,KAG5B7B,EAAQ,CAAEC,SAAS,QAASC,IAAI,SAOdE,EAAMqD,QAKbC,GAAkB9C,IAAO+C,GAAX,KAKzBrE,GACY,SAAAmC,GAAK,OAAEA,EAAMC,MAAMI,aAI/BlC,KAGgB,SAAA6B,GAAK,OAAEA,EAAMC,MAAMK,kBAQjB3B,EAAMK,QAOZmD,GAAuBhD,IAAOM,IAAV,KAMbd,EAAMK,Q,orBCjD3B,IAAMoD,GAAYC,YAAH,MAEN,SAAArC,GAAK,OAAEA,EAAMhC,OAAQgC,EAAMC,MAAMC,gBAAkB,SAO/CoC,GAAKnD,IAAOoD,GAAV,KACbH,IAIWI,GAAKrD,IAAOsD,GAAV,KACbL,IAIWM,GAAKvD,IAAOwD,GAAV,KACbP,IAIWQ,GAAKzD,IAAO0D,GAAV,KACbT,IAIWU,GAAK3D,IAAO4D,GAAV,KACbX,ICZaY,GAjBE,SAAC,GAAmC,IAAlCnH,EAAiC,EAAjCA,KAAMoH,EAA2B,EAA3BA,SAAaC,EAAc,oCAChD,MAAU,OAAPrH,EACI,kBAACyG,GAAQY,EAAYD,GAEb,OAAPpH,EACG,kBAAC2G,GAAQU,EAAYD,GAEjB,OAAPpH,EACG,kBAAC6G,GAAQQ,EAAYD,GAEjB,OAAPpH,EACG,kBAAC+G,GAAQM,EAAYD,GAEjB,OAAPpH,EACG,kBAACiH,GAAQI,EAAYD,QAD3B,GCaME,gBApBC,SAAC,GAGV,IAAD,IAFJnH,QAAWgB,EAEP,EAFOA,KAAMG,EAEb,EAFaA,KACjBiG,GACI,EAFmBlG,WAEnB,EAF+BD,OAE/B,EAFuCG,QAEvC,EADJgG,SAMA,OACE,oCACE,kBAACnB,GAAD,CAAgBL,QANH,WACfwB,EAAQC,KAAR,oBAA0BrG,MAMtB,kBAAC,GAAD,CAASnB,KAAK,MAAMmB,GACpB,kBAAC8D,GAAD,CAAkB5C,MAAM,OAAO6C,OAAO,QACpC,kBAACC,GAAD,CAAWI,IAAKjE,EAAMmG,IAAI,W,onDCpB7B,IAAMC,GAAgBpE,IAAOM,IAAV,MXoDC,WAAoD,IAAD,yDAAN,GAAM,IAAjD+D,iBAAiD,MAAtC,SAAsC,MAA5BC,mBAA4B,MAAhB,SAAgB,EAC5E,MAAQ,CACN/E,QAAQ,OACR,aAAa,GAAb,OAAgB8E,GAChB,eAAe,GAAf,OAAkBC,MWtDD9E,EAAMK,QAMb0E,GAAevE,IAAOwE,OAAV,KA2CNhF,EAAMK,QC1BX4E,GAzBA,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAUC,EAAkC,EAAlCA,gBAAgBC,EAAkB,EAAlBA,YAc1C,OACE,kBAACR,GAAD,KACE,kBAACG,GAAD,CAAc1G,KAAK,gBAAgBgH,GAAG,gBAAgBC,SAAY,SAACC,GAAD,OAAKJ,EAAgBI,EAAEC,OAAOC,SAC9F,iDACA,4BAAQA,MAAQ,OAAhB,OAjBa,SAACP,GAClB,OAAIA,EACcE,EAAYM,KAAI,SAAC3H,EAAM4H,GAAP,OAC9B,4BAAQF,MAAO1H,EAAM6H,IAAKD,GACvB5H,WAKL,EASG8H,CAAWX,MCXLY,GARY,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SACzB,OACI,oCACKA,I,qqBCJN,IAAMyB,GAAkBvF,IAAOiB,GAAV,KAC1B1C,KAEYiH,GAAcxF,IAAO+C,GAAT,KACpBjE,IAKHF,EAAS,cACF,SAAAiC,GAAK,OAAEA,EAAMC,MAAM2E,kBAC1BzG,KAEsB,SAAA6B,GAAK,OAAEA,EAAMC,MAAMC,kBAS9B2E,GAAmB1F,IAAOM,IAAT,MAMhBqF,GAAwB3F,IAAOM,IAAV,M,kHC5BpC,IAIgBsF,GAJG5F,IAAO6F,IAAV,MACL,qBAAE9G,OAAiB,UACrB,qBAAE6C,QAAmB,UCafkE,GAfM,SAAC,GAAgC,EAA9BlE,OAA8B,EAAtB7C,MAAuB,IAAhBgH,EAAe,EAAfA,SAIvC,OACI,yBAAKtD,QAASsD,GACZ,kBAAC,GAAD,CACChH,MAAM,KAAK6C,OAAO,KAAKoE,MAAM,6BAA6BC,YAAU,UAAUC,KAAK,QAAQC,YAAU,UAAUC,OAAO,WAAU,0BAAMC,EAAE,+ECEhIP,GATM,SAAC,GAAgC,EAA9BlE,OAA8B,EAAtB7C,MAAuB,IAAhBgH,EAAe,EAAfA,SACnC,OACI,yBAAKtD,QAASsD,GACZ,kBAAC,GAAD,CACEhH,MAAM,KAAK6C,OAAO,KAAKoE,MAAM,6BAA6BC,YAAU,UAAUE,YAAU,UAAUD,KAAK,QAAQE,OAAO,WAAU,0BAAMC,EAAE,4EC+ErIC,GAxEI,SAAC,GAMb,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,YAEI,KADJC,eAGwCtE,mBAAS,IAF7C,mBAEGuE,EAFH,KAEiBC,EAFjB,KA2DJ,OACE,kBAAClB,GAAD,KAzCe,SAACY,EAAOC,GACvB,GAAID,EAAO,CACT,IAAMO,EAAQC,KAAKC,KAAKT,EAAMU,QAAUT,GAClCU,EAAS,aAAOC,MAAML,GAAOM,QAEnC,OACE,kBAAC1B,GAAD,KACE,kBAAC2B,GAAD,CACEpF,IAAKqF,eACLnH,SAAS,WACTpB,MAAM,OACN6C,OAAO,OACPmE,SAAU,WAxBhBc,EADED,EAAe,EACDA,EAAa,EAGb,MAuBZ,kBAACrB,GAAD,KACG2B,EACEhC,KAAI,SAACqC,GAAD,OACH,kBAAC/B,GAAD,CACEJ,IAAKmC,EACL5E,UAAW+D,IAAgBa,EAAO,GAAK,SACvC9E,QAAS,kBAAMgE,EAAec,EAAMf,EAAoBU,EAAUD,UACjEM,EAAO,MAGXC,QAAO,SAACC,EAAGtC,GACV,OAAOA,GAAQyB,GAAgBzB,EAASyB,EAAa,MAG3D,kBAACc,GAAD,CACEzF,IAAKqF,eACLnH,SAAS,WACTpB,MAAM,OACN6C,OAAO,OACPmE,SAAU,kBAvCI,SAACmB,GAEnBN,EAAeM,EAAUD,OAAO,GAClCJ,EAAgBD,EAAa,GAoCPe,CAAgBT,QAShCU,CAASrB,EAAOC,K,6iBC/ErB,IAAMqB,GAAe7H,IAAOM,IAAV,MCQVwH,GANA,WACX,OACI,kBAACD,GAAD,CAAclF,UAAU,mBCJnBoF,GAAgB,SAAAC,GAAK,OAAEA,EAAMnL,QAAQoL,WACrCC,GAAc,SAAAF,GAAK,OAAEA,EAAMnL,QAAQsL,gBCsIjCC,GApHW,WACxB,IAAMlL,EAAWmL,cADa,EAWQhG,mBAAS,GAXjB,mBAWvBqE,EAXuB,KAWVC,EAXU,OAcctE,mBAAS,MAdvB,mBAcvBoE,EAduB,KAcP6B,EAdO,KAgBxBC,EAAgBC,YAAYT,IAC5BI,EAAiBK,YAAYN,IAanCO,qBAAU,WA5BkB,IAACC,EA6BvBH,IACFD,GA9ByBI,EA8Ba,GA7BjCH,EACHA,EAAcf,QAAO,SAACC,EAAGkB,GACvB,OAAOA,EAAYD,KAErB,OA0BF/B,EAAe,MAEhB,CAAC4B,IAGJ,IAYMK,EAAoBC,uBACxB,WAA+B,IAA9B1D,EAA6B,uDAArB,EAAGuD,EAAkB,uDAAP,GACrB,GAAIH,EAAe,CACjB,IAAMO,EAAgBP,EAAcf,QAAO,SAACC,EAAGkB,GAC7C,OAAc,IAAVxD,GACFwB,EAAe,GACRgC,EAAYD,IAEnB/B,EAAexB,EAAQ,GAGrBwD,IAAcxD,EAAQ,GAAKuD,GAC3BC,EAAYxD,EAAQuD,MAK1BJ,EAAkBQ,GAEpB,OAAO,OAET,CAACP,IAKH,OAAOJ,EACL,oCACE,kBAAC,GAAD,OAGF,kBAACnF,GAAD,KACE,kBAAC+F,GAAD,KACE,kBAAC,GAAD,CACErE,UAAW6D,EACX5D,gBA/Cc,SAACM,GACP,QAAVA,GACF/H,EAASF,EAAsB,yCAGjCE,EACEF,EAAsB,2CAAD,OAA4CiI,MA0C7DL,YAlEY,CAClB,OACA,SACA,SACA,UACA,WACA,YA+DE,kBAAC,GAAD,CACE2B,MAAOgC,EACP/B,oBAAoB,KACpBC,eAAgBmC,EAChBlC,YAAaA,EACbC,eAAgBA,IAGjBF,GACC,kBAAC7D,GAAD,KAGG6D,EAAevB,KAAI,SAACrI,EAASsI,GAC5B,OACE,kBAAC,GAAD,CACEtI,QAASA,EACTuI,IAAKvI,EAAQgB,KACbD,mBAAoBA,U,mRC5H7B,IAAMoL,GAAchJ,IAAOM,IAAV,MAMV,SAAAO,GAAK,OAAEA,EAAMC,MAAMmI,cCGlBC,IDCkBlJ,IAAOM,IAAV,MCVlB,SAAC,GAA0B,IAAzB2B,EAAwB,EAAxBA,IAAKlD,EAAmB,EAAnBA,MAAO6C,EAAY,EAAZA,OAEtB,OACI,kBAACD,GAAD,CAAkB5C,MAAOA,EAAO6C,OAAUA,GACtC,kBAACC,GAAD,CAAYI,IAAOA,EAAKlD,MAAOA,EAAO6C,OAAUA,O,u5CCHrD,IAAMuH,GAAUnJ,IAAOM,IAAV,KAClB/B,KACgB,qBAAE6K,eAAiC,SACxC,SAAAvI,GAAK,OAAEA,EAAMC,MAAMC,kBAKlBsI,GAAgBrJ,IAAOM,IAAX,KACrB/B,IAEFG,GAKM,qBAAEK,OAAkB,aACnB,qBAAE6C,QAAoB,aAEnB,SAAAf,GAAK,OAAEA,EAAMhC,OAAOgC,EAAMC,MAAMC,kBAOhC,SAAAF,GAAK,OAAEA,EAAMC,MAAMS,eAOnB+H,GAActJ,IAAOM,IAAV,KACtBlB,EAAQ,UAeGmK,IARavJ,YAAOsJ,GAAPtJ,CAAF,MAQEA,IAAOM,IAAT,KACtBlB,IAGAV,IAQY8K,GAAqBxJ,YAAOqJ,GAAPrJ,CAAH,MAIlByJ,GAAqBzJ,YAAOqJ,GAAPrJ,CAAH,M,iaChEzB,IAAM0J,GAAa1J,IAAO2J,KAAV,KAChB/K,E1BQO,c0BNJ,SAAAiC,GAAK,MAAgB,cAAdA,EAAMhC,MAAoBgC,EAAMC,MAAMC,eAAgBF,EAAMC,MAAMM,gBAGjE,SAAAP,GAAK,OAAEA,EAAM+I,aAAa,UAO/BC,GAAa7J,IAAO2J,KAAV,MACb,SAAA9I,GAAK,OAAEA,EAAMC,MAAMS,eCsCduI,GAlDK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOrN,EAAuB,EAAvBA,KAAMsN,EAAiB,EAAjBA,WAC5BC,EAAU,SAACvN,EAAMwN,EAAM/E,GAC3B,MAAa,aAATzI,EACK,kBAACgN,GAAD,CAAYtE,IAAKD,GAAQ+E,GAEzB,kBAACR,GAAD,CAAYtE,IAAKD,GAAQ+E,EAAzB,OA4BX,OACE,oCACGH,EACC,kBAACR,GAAD,KACE,kBAACM,GAAD,KAAanN,GACb,6BA7BS,SAACqN,EAAOrN,GAEvB,GAAIqN,GAASA,EAAM9C,OAAS,EAC1B,OAAO8C,EAAM7E,KAAI,SAACgF,EAAM/E,GACtB,GAAa,YAATzI,GAA+B,cAATA,EACxB,OAAIyI,EAAQ4E,EAAM9C,OAAS,EAClBgD,EAAQ,KAAMC,EAAM/E,GAEpB8E,EAAQ,WAAYC,EAAM/E,GAE9B,GAAa,cAATzI,GAAiC,eAATA,EAAuB,CACxD,IAAMyN,EAAQD,EAAKrM,KAEnB,OAAIsH,EAAQ4E,EAAM9C,OAAS,EAClBgD,EAAQ,KAAME,EAAOhF,GAErB8E,EAAQ,WAAYE,EAAOhF,GAGtC,OAAO,QAUCyC,CAASmC,EAAOrN,KAGxB,kBAAC6M,GAAD,KACE,kBAACM,GAAD,KAAanN,GACb,kBAACgN,GAAD,KAAaM,EAAWI,eAAe,UCuBlCpG,eAAWqG,YAAQ,KAAM,CAAEzM,sBAAhByM,EA3DJ,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAO1M,EAAkC,EAAlCA,mBAAoBqG,EAAc,EAAdA,QAE5CsG,EAAkB/B,aAAY,SAACR,GAAD,OAAWA,EAAMnL,QAAQ2N,kBACvDrC,EAAiBK,aAAY,SAACR,GAAD,OAAWA,EAAMnL,QAAQsL,kBAqD5D,OANAM,qBAAU,WACR7K,EAAmB,yCAAD,OACyB0M,EAAMG,OAAO5F,OAEvD,CAACjH,IAEG,kBAACoL,GAAD,KAnDgB,SAACuB,GACtB,GAAIA,IAAoBpC,EAAgB,CAAC,IAErCtK,EAUE0M,EAVF1M,KACAE,EASEwM,EATFxM,WACAD,EAQEyM,EARFzM,OACAG,EAOEsM,EAPFtM,QACAD,EAMEuM,EANFvM,KACAE,EAKEqM,EALFrM,QACAE,EAIEmM,EAJFnM,UACAC,EAGEkM,EAHFlM,UACAC,EAEEiM,EAFFjM,KACAH,EACEoM,EADFpM,WAOF,OACE,kBAACqL,GAAD,KACE,kBAAC,GAAD,CAAS9M,KAAK,KAAKmC,MAAM,WACtBhB,GAEH,kBAAC,GAAD,CAAKoE,IAAKjE,IACV,kBAACyL,GAAD,KACE,kBAAC,GAAD,CAAaO,WAAYlM,EAAQpB,KAAK,WACtC,kBAAC,GAAD,CAAasN,WAAYjM,EAAYrB,KAAK,eAC1C,kBAAC,GAAD,CAAasN,WAAY1L,EAAM5B,KAAK,SAEpC,kBAAC,GAAD,CAAasN,WAAY/L,EAASvB,KAAK,YACvC,kBAAC,GAAD,CAAaqN,MAAO7L,EAASxB,KAAK,YAClC,kBAAC,GAAD,CAAaqN,MAAO3L,EAAW1B,KAAK,cACpC,kBAAC,GAAD,CAAaqN,MAAO5L,EAAYzB,KAAK,eACrC,kBAAC,GAAD,CAAaqN,MAAO1L,EAAW3B,KAAK,eAGtC,kBAACqD,EAAD,CAAQ0C,QArBG,WACbwB,EAAQC,KAAK,gBAoBX,SAIJ,OAAO,kBAAC,GAAD,MAUUwG,CAAeH,Q,iLCnE/B,IAAMI,GAAa3K,IAAO4K,KAAV,KACrBxL,KAIY,SAAAyB,GAAK,OAAEA,EAAMC,MAAMM,gB,mzBCC1B,IAAMyJ,GAAe7K,IAAOM,IAAV,KAKrBlB,KAOS0L,GAAY9K,IAAOC,OAAV,MAaT8K,IATY/K,YAAO8K,GAAP9K,CAAH,KAElBzB,IAEAG,GAK6BsB,IAAOM,IAAV,OAKjB0K,GAAkBhL,YAAO2B,GAAP3B,CAAH,KACvBlB,EAAU,CAACC,MAAM,OAAQrC,KAAK,SAAUmC,MAAM,SAIrCoM,GAAmBjL,YAAOsJ,GAAPtJ,CAAH,M,2TCzCvB,IAAMkL,GAAclL,IAAOmL,MAAV,MAQG,qBAAEjL,SAAqB,eAIpCkL,GAAqBpL,IAAOM,IAAV,MCCjB+K,GAbD,SAAC,GAA0D,IAAxD3O,EAAuD,EAAvDA,KAAM4O,EAAiD,EAAjDA,aAAcrG,EAAmC,EAAnCA,MAAOsG,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpD,OACE,kBAACJ,GAAD,KACE,kBAACF,GAAD,CACExO,KAAMA,GAAQ,SACdoI,SAAU,SAACC,GAAD,OAAOuG,EAAavG,EAAEC,OAAOC,QACvCA,MAAOA,EACPsG,SAAUA,EACVC,YAAaA,M,+NCRd,IAAMC,GAAgBzL,IAAOM,IAAV,KACxB/B,IACGO,EAAU,QACD,kBAAkB,UAAlB,EAAEpC,KAAwBiC,EAAsBA,IjC0BpC,WAAqB,IAApB+M,EAAmB,uDAAjB,EAAEC,EAAe,uDAAb,EAAEC,EAAW,uDAAT,EAAEC,EAAO,uDAAL,EACvC,MAAM,WAAN,OAAkBH,EAAlB,eAA0BC,EAA1B,eAAkCC,EAAlC,eAA0CC,EAA1C,OiCrBGC,CAAW,EAAE,EAAE,EAAE,ICePC,GAvBA,SAAC,GAA+B,IAA7BlP,EAA4B,EAA5BA,QAASD,EAAmB,EAAnBA,OAAQF,EAAW,EAAXA,KAC3BsP,EAAQnP,EAAQH,GAAMuP,cACtBC,EAAkBtP,EAAQA,EAAOqP,cAAe,KAkBtD,OAAO,oCAfW,SAACD,EAAMpP,GAEvB,QAAIA,IACKoP,IAAUpP,EACf,kBAAC6O,GAAD,KACE,qDAGF,kBAACA,GAAD,CAAe/O,KAAO,SACpB,uEADF,IACqD,kBAACgN,GAAD,CAAY7K,MAAQ,YAAY+K,YAAc,UAA9C,IAAyD/M,EAAQgB,QAMlHsO,CAAUH,EAAOE,K,ydClBtB,IAAME,GAAiBpM,IAAOM,IAAV,KACxBxB,KACkB,SAAA+B,GAAK,OAAEA,EAAMC,MAAMI,cAO3BmL,GAAiBrM,YAAOsJ,GAAPtJ,CAAH,KAKPR,EAAMC,UAKb6M,GAAatM,YAAO0J,GAAP1J,CAAH,MACf,SAAAa,GAAK,OAAGA,EAAMC,MAAMC,kBC2BbwL,GAzCCC,IAAMC,MAAK,YAGpB,IAAD,IAFJC,QAAWC,EAEP,EAFOA,aAAcC,EAErB,EAFqBA,aAAcC,EAEnC,EAFmCA,aAAcC,EAEjD,EAFiDA,KACrDC,EACI,EADJA,WAoCA,OAAO,oCAjCe,SAACA,GACrB,MAAmB,QAAfA,EAEA,kBAACV,GAAD,KACE,kBAAChD,GAAD,CAActK,MAAM,QAAQ6C,OAAO,QACjC,kBAACiI,GAAD,cACA,kBAACH,GAAD,KAAakD,IAEf,kBAACvD,GAAD,CAActK,MAAM,QAAQ6C,OAAO,QACjC,kBAACiI,GAAD,cACA,kBAACH,GAAD,KAAaiD,IAEf,kBAACtD,GAAD,CAActK,MAAM,QAAQ6C,OAAO,QACjC,kBAACiI,GAAD,cACA,kBAACH,GAAD,KAAamD,IAEf,kBAACxD,GAAD,CAActK,MAAM,QAAQ6C,OAAO,QACjC,kBAACiI,GAAD,aACA,kBAACH,GAAD,KAAaoD,EAAb,OAIkB,WAAfC,EAEP,kBAACX,GAAD,KACE,2BAAG,4CAAH,IAA2B,kBAACE,GAAD,sBAA2BQ,EAA3B,KAA3B,KACA,kEAJC,EAWCE,CAAcD,O,uOC9CnB,IAAME,GAAajN,YAAOmJ,GAAPnJ,CAAH,MAQTkN,GAAkBlN,IAAOM,IAAV,MCWd6M,GAlBF,SAAC,GAA+C,IAAD,IAA5CtQ,QAAUkB,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,OAC7C,OACE,kBAACmP,GAAD,CAAY7D,cAAgB,UAC1B,kBAAC8D,GAAD,KACE,kBAACrD,GAAD,oCACA,kBAACH,GAAD,KAAa5L,IAEf,kBAACoP,GAAD,KACE,kBAACrD,GAAD,qCACA,kBAACH,GAAD,KAAa3L,EAAWqM,eAAe,MAAvC,MAEF,kBAAC8C,GAAD,KACE,kBAACrD,GAAD,wCACA,kBAACH,GAAD,KAAazL,MCkBRmP,GAAkB,SAACC,EAAKC,EAAMrI,GAC1C,OAAOoI,EAAI7F,QAAO,SAAA0C,GAAI,OAAEA,EAAKoD,GAAMrB,cAAcsB,SAAStI,EAAMgH,mB,SC1BpDuB,GAAYC,aACxB,CAJ8B,SAAAzF,GAAK,OAAEA,EAAM0F,MAAMC,gBAI9B,SAAAC,GAChB,OAAIA,GAAOC,OAAOC,OAAOF,GAAK3G,OAAO,EACrB4G,OAAOC,OAAOF,GACjBG,MAAK,SAACC,EAAGpC,GAClB,OAAIA,EAAEkB,KAAOkB,EAAElB,KAEN,EAELlB,EAAEkB,KAAOkB,EAAElB,MACL,EAGH,KACN,GAAGA,KAID,Q,yICzBJ,IAAMmB,GAAmBjO,YAAOqJ,GAAPrJ,CAAH,MAIb,SAAAa,GAAK,OAAEA,EAAMC,MAAMS,eCoBpB2M,GAzBG1B,IAAMC,MAAK,YAAoB,IAAjB0B,EAAgB,EAAhBA,UAsB9B,OAAO,oCApBc,SAACA,GACpB,OAAIA,EAEA,kBAACF,GAAD,KACE,4CACA,8BAAOE,EAAP,MAMF,kBAACF,GAAD,KACE,2CACF,oCAOIG,CAAaD,OCoHVE,GA9GD,WACZ,IAAMnR,EAAWmL,cADC,EAEmBhG,mBAAS,IAF5B,mBAEXzF,EAFW,KAEH0R,EAFG,KAGZzR,EAAU2L,aAAY,SAACR,GAAD,OHhCE,SAAAA,GAAK,OAAEA,EAAM0F,MAAMa,cGgCVC,CAAiBxG,MAClDC,EAAYO,aAAY,SAACR,GAAD,OAAWD,GAAaC,MAChDyG,EAAgBjG,aAAY,SAACR,GAAD,OHjCJ,SAAAA,GAAK,OAAEA,EAAM0F,MAAMe,cGiCJC,CAAiB1G,MACxD0E,EAAUlE,aAAY,SAACR,GAAD,OHjCJ,SAAAA,GAAK,OAAEA,EAAM0F,MAAMhB,QGiCJiC,CAAW3G,MAC5C6E,EAAerE,aAAY,SAACR,GAAD,OHjCJ,SAAAA,GAAK,OAAEA,EAAM0F,MAAMb,aGiCJ+B,CAAgB5G,MACtD8E,EAAOtE,aAAY,SAACR,GAAD,OHjCJ,SAAAA,GAAK,OAAEA,EAAM0F,MAAMZ,KGiCJ+B,CAAQ7G,MACtC+E,EAAavE,aAAY,SAACR,GAAD,OHjCJ,SAAAA,GAAK,OAAEA,EAAM0F,MAAMX,WGiCJ+B,CAAc9G,MAClDmG,EAAY3F,aAAY,SAACR,GAAD,OAAWwF,GAAYxF,MAVnC,EAaY3F,oBAAS,GAbrB,mBAaX0M,EAbW,KAaCC,EAbD,KA4BZC,EAAe,WACnB/R,E/ClDO,CAACR,KCPgB,iBDOKD,Q+CkDPI,KAYxB,OACE,kBAACoO,GAAD,KACE,kBAAC,GAAD,CAAWkD,UAAWA,IACtB,kBAACtD,GAAD,KACE,kBAAC,GAAD,CACES,aAAcgD,EACdrJ,MAAOrI,EACP2O,WAAU1O,IAAY4R,GACtBjD,YACG3O,EAEG,oCADA,uBAIPA,GACC,6BACE,kBAACmO,GAAD,KACE,kBAACnJ,GAAD,CAAWI,IAAKpF,EAAQmB,KAAMmG,IAAI,MAEnCsK,GACC,kBAAC1D,GAAD,KACE,kBAAC,GAAD,CAAQnO,OAAQ6R,EAAe5R,QAASA,EAASH,KAAK,WAK9C,QAAfqQ,EACC,kBAAC1M,EAAD,KACE,kBAACN,EAAD,CACE0C,QAnDU,WACpB,IAAMyM,EJlDmB,SAACnF,GAC1B,GAAIA,EAGJ,OAAOA,EAAMhD,KAAKoI,MAAMpI,KAAKqI,UAAYrF,EAAM9C,OAAU,KI8C9BoI,CAAcpH,GACzC/K,EAASV,EAAiB0S,IACtBtS,GACFM,EAASP,EAAiB,QAgDlB4O,YAAU1O,GAAY4R,IACrB5R,EAAU,OAAS,QAAS,KAE/B,kBAACkD,EAAD,CACE0C,QAAS,kBA1CH,SAAC7F,EAAQC,GACrBD,GAAUC,IACZK,EAASP,EAAiBC,EAAQC,IAClCyR,EAAmB,KAuCInC,CAAUvP,EAAQC,IACjC0O,UAAW3O,GAFb,gBAMA,kBAACmD,EAAD,CAAQ0C,QAASwM,EAAc/O,QAAQ,aAAvC,aAKF,kBAACG,EAAD,KACE,kBAACN,EAAD,CAAQ0C,QAASwM,GAAjB,aAGJ,kBAAC,GAAD,CACEvC,QAASA,EACTK,WAAYA,EACZD,KAAMA,EACND,aAAcA,IAGd,kBAAC9M,EAAD,CACEG,QAAQ,UACRrB,MAAM,QACN0M,UAAU1O,EACV4F,QAtFM,WACduM,GAAQ,SAACM,GAAD,OAAmBA,OAsFlBP,EAAa,YAAc,aAG/BA,GAAclS,GAAW,kBAAC,GAAD,CAAMA,QAASA,O,yOCpIxC,IAAM0S,GAAeC,YAAH,KAOLhQ,EAAMK,QCRf4P,GAAS,CAEpB,CACErO,aAAa,UACbL,eAAe,UACfG,WAAW,UACXK,YAAY,QACZJ,gBAAgB,WAChBsE,gBAAgB,SAElB,CACErE,aAAa,QACbL,eAAe,SACfG,WAAW,WACXK,YAAY,QACZJ,gBAAgB,QAChBsE,gBAAgB,SAGlB,CACErE,aAAa,UACbL,eAAe,UACfG,WAAW,YACXK,YAAY,QACZJ,gBAAgB,UAChBsE,gBAAgB,SAElB,CACErE,aAAa,UACbL,eAAe,UACfG,WAAW,UACXK,YAAY,QACZJ,gBAAgB,UAChBsE,gBAAgB,SAGlB,CACErE,aAAa,UACbL,eAAe,UACfG,WAAW,UACXK,YAAY,QACZJ,gBAAgB,UAChBsE,gBAAgB,SAIlB,CACErE,aAAa,QACbL,eAAe,UACfG,WAAW,UACXK,YAAY,QACZJ,gBAAgB,UAChBsE,gBAAgB,UCLLiK,GAlCH,WAAO,IAAD,EACUrN,mBAASoN,GAAO,IAD1B,mBACT3O,EADS,KACF6O,EADE,KAEVzS,EAAWmL,cAEjBI,qBAAU,WACRvL,EAASF,EAAsB,2CAC9B,CAACE,IAQJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAe4D,MAAOA,GACpB,kBAACyO,GAAD,MACA,kBAAC5E,GAAD,KACE,kBAAC,GAAD,CAAQvI,cAVM,WACpBqN,GAAOvL,KAAKuL,GAAO,IACnBA,GAAOG,MAAMH,GAAO,IACpBE,EAASF,GAAO,OASV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,KAAK,aAAaC,OAAK,EAACC,UAAWC,KAC1C,kBAAC,IAAD,CAAOH,KAAK,iBAAiBE,UAAWE,GAAeH,OAAK,IAC5D,kBAAC,IAAD,CAAOD,KAAK,SAASE,UAAW1B,GAAOyB,OAAK,IAE5C,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAK,EAACC,UAAWC,U,iBCrCvCE,GAAe,CACjBjI,UAAW,KACXuC,eAAgB,KAChBrC,gBAAgB,GAyCLgI,GArCQ,WAAgC,IAA/BnI,EAA8B,uDAAxBkI,GAAcE,EAAU,uCACrD,OAAOA,EAAO1T,MAEV,IhDZ0B,kBgDctB,OAAO,gBACAsL,EADP,CACcC,UAAUmI,EAAO3T,QAC3B0L,gBAAe,IAIvB,IhDnBwB,gBgDoBpB,OAAO,gBACAH,EADP,CACcwC,eAAe4F,EAAO3T,UAIxC,IhDxByB,kBgDyBrB,OAAO,gBACAuL,EADP,CACcG,eAAeiI,EAAO3T,UAGxC,IhD5BwB,iBgD6BpB,OAAO,gBACAuL,EADP,CAEIC,UAAWmF,GAAgBpF,EAAMC,UAAW,OAAQmI,EAAO3T,WAKnE,QACG,OAAOuL,I,SCzCFqI,GAAkB,SAACC,EAAOC,EAAOhT,GAC1C,IAAMqP,EAAyB,iBAAV0D,EAA2BA,EAAQC,EACxD,MAAc,iBAAVD,EAII,MAFF/S,EAAKqP,GAAgB,IAAMrP,EAAKgT,GAAShT,EAAK+S,GAAS,IAAIE,QAC3D,GAKkE,KAAnEjT,EAAKqP,IAAiBrP,EAAKgT,GAAShT,EAAK+S,GAAS,IAAIE,QAAQ,IAK1DC,GAAiB,SAACH,EAAOC,EAAOhT,GAAU,IAAD,EACpD,OAAO,gBACFA,GADL,oBAEG+S,EAAQ/S,EAAK+S,GAAS,GAFzB,8BAGgB/S,EAAK+S,GAAU/S,EAAKgT,GAAO,GAH3C,sBAIQF,GAAgBC,EAAOC,EAAOhT,IAJtC,K,SCPImT,GAAgB,CACpBjC,cAAe,KACfF,cAAe,KACf7B,QAAS,CACPE,aAAc,EACdD,aAAc,EACdE,aAAc,EACdC,KAAM,GAERC,WAAY,GACZY,aAAa,IA0GAgD,GArGM,WAAoC,IAAnC3I,EAAkC,uDAA1B0I,GAAeN,EAAW,uCACtD,OAAQA,EAAO1T,MACb,IpDzB6B,qBoD0B3B,OAAO,gBACFsL,EADL,CAEEuG,cAAe6B,EAAO3T,QACtBgS,cAAe,OAInB,IpDlC6B,qBoDmC3B,IAAMmC,EAAY5I,EAAM0E,QAClBE,EAAa,eACbD,EAAa,eAEnB,GAAG3E,EAAM0E,QAAQG,aAAa,EAAE,EAE9B,OAAIuD,EAAOxT,OAAOqP,gBAAkBmE,EAAOvT,QAAQgB,KAAKoO,cAC/C,gBACFjE,EADL,CAEEyG,cAAe2B,EAAOxT,OAEtB8P,QAAS+D,GAAe7D,EAAcD,EAAciE,KAK/C,gBAEF5I,EAFL,CAGEyG,cAAe2B,EAAOxT,OACtB8P,QAAS+D,GAAgB9D,EAAaC,EAAcgE,KAQvD,IAAM/L,EAAKgM,eAEZ,OAAIT,EAAOxT,OAAOqP,gBAAkBmE,EAAOvT,QAAQgB,KAAKoO,cAE/C,gBACFjE,EADL,CAEEyG,cAAe2B,EAAOxT,OACtBmQ,WAAY,SACZL,QAAS+D,GAAgB7D,EAAaD,EAAciE,GACpDjD,aAAa,gBACR3F,EAAM2F,aADC,gBACa9I,EAAI,CACzBA,GAAGA,EACHiI,KAAKuD,GAAiB,eAAgB,eAAgBO,QAKrD,gBAEF5I,EAFL,CAGEyG,cAAe2B,EAAOxT,OACtBmQ,WAAY,SACZL,QAAS+D,GAAgB9D,EAAcC,EAAcgE,GACrDjD,aAAa,gBACR3F,EAAM2F,aADC,gBACa9I,EAAI,CACzBA,GAAGA,EACHiI,KAAKuD,GAAgB,eAAgB,eAAeO,QAShE,IpDhGwB,iBoDiGtB,OAAO,gBAEF5I,EAFL,CAGEuG,cAAe,KACfE,cAAe,KACf1B,WAAY,MAEZL,QAAQ,gBACH1E,EAAM0E,QADJ,CAEHE,aAAc,EACdD,aAAc,EACdE,aAAc,EACdC,KAAM,MAQd,QACE,OAAO9E,I,6BC/GP8I,GAAcC,aAAgB,CACpClU,QAAQsT,GACRzC,MAAMiD,KAIAK,GAAmBC,OAAOC,sCAAwCC,KAKzDC,GAFDC,aAAYP,GAAYE,GAAiBM,aAAgBC,KAAMC,QCV7EC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAASA,IACnB,kBAAC,IAAMO,WAAP,KACE,kBAAC,GAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.4689b326.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left.1a057415.svg\";","module.exports = __webpack_public_path__ + \"static/media/indian4.08d4f989.png\";","import {SET_RANDOM_COUNTRY,SET_COUNTRY_ANSWER,START_NEW_GAME} from \"../actions/games.actions\"\r\nexport const setRandomCountry = (payload)=> {\r\n    return {type: SET_RANDOM_COUNTRY, payload}\r\n}\r\nexport const setCountryAnswer = (answer,country)=> {\r\n    return {type: SET_COUNTRY_ANSWER, country,answer}\r\n}\r\n\r\nexport const startNewGame =(payload)=> {\r\n    return {type:START_NEW_GAME, payload}\r\n}","export const SET_COUNTRY_ANSWER= \"SET_COUNTRY_ANSWER\";\r\nexport const SET_RANDOM_COUNTRY =\"SET_RANDOM_COUNTRY\";\r\nexport const START_NEW_GAME=\"START_NEW_GAME\";\r\n","\r\nimport axios from 'axios';\r\nimport {FETCH_COUNTRIES,FETCH_COUNTRY,COUNTRY_LOADING,SEARCH_COUNTRY} from \"../actions/countriesActions\"\r\n\r\nimport {setRandomCountry} from \"../actionsCreators/games.actionCreators\"\r\n\r\nexport const fetchData =(payload)=> {\r\n    return {type: FETCH_COUNTRIES,payload }\r\n}\r\n\r\nexport const setSingleCountry =(payload)=> {\r\n    return {type:FETCH_COUNTRY, payload}\r\n}\r\n\r\nexport const setCountryLoading =(payload)=> {\r\n    return {type: COUNTRY_LOADING,payload}\r\n}\r\n\r\nexport const searchCountry =(payload)=> {\r\n    return {type: SEARCH_COUNTRY, payload}\r\n}\r\n\r\nexport const fetchAndSetServerData = (url)=> {\r\n\r\n    return (dispatch)=> {\r\n        dispatch(setCountryLoading(true))\r\n       \r\n            axios.get(url)\r\n            .then(response=> {\r\n                dispatch(fetchData(response.data))\r\n            })\r\n            .catch( error => {\r\n                console.log(error);\r\n            } );\r\n            \r\n    }\r\n}\r\n\r\nexport const fetchServerData = (url,data)=> {\r\n    return (dispatch)=> {\r\n   \r\n        axios.get(url)\r\n        .then(response=> {\r\n            dispatch(fetchData(response.data))\r\n            \r\n        }).then(()=>dispatch(setRandomCountry(data)))\r\n    }\r\n\r\n}\r\n\r\nexport const fetchSingleCountry =(url)=> {\r\n    return (dispatch)=> {\r\n        dispatch(setCountryLoading(true))\r\n        axios.get(url)\r\n        .then(response=> {\r\n   \r\n            const {data:[{name,region,population,flag,capital,borders,currencies, languages, timezones,area}]} = response\r\n            const countryData = {\r\n                name,\r\n                region,\r\n                population,\r\n                flag,\r\n                capital,\r\n                borders,\r\n                timezones,\r\n                languages,\r\n                currencies,\r\n                area\r\n        \r\n            }\r\n       \r\n            dispatch(setSingleCountry(countryData))\r\n        }).then(()=>dispatch(setCountryLoading(false)))\r\n    }\r\n}\r\n\r\n","\r\nexport const FETCH_COUNTRIES = \"FETCH_COUNTRIES\"\r\nexport const FETCH_COUNTRY = \"FETCH_COUNTRY\"\r\nexport const COUNTRY_LOADING =\"COUNTRY_LOADING\"\r\nexport const SEARCH_COUNTRY =\"SEARCH_COUNTRY\"\r\n","\r\nexport const setFlex = ({x = \"center\", y = \"center\"}={}) => {\r\n    return `display:flex; justify-content:${x}; align-items: ${y}; `\r\n};\r\nexport const setShadow = {\r\n    light: \"box-shadow: 3px 3px 5px 0px rgba(0,0,0,0.75)\",\r\n    dark: \"box-shadow: 6px 6px 5px 0px rgba(0,0,0,0.75);\",\r\n    darkest: \"box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\",\r\n    bottomLight: \"box-shadow:0 0 10px rgba(0,0,0,0.5)\"\r\n  };\r\n\r\n\r\nexport const color =  {\r\n  royalBrown: \"#814c0bd9\",\r\n}\r\n\r\n  \r\nexport const linearGradient = {\r\n    light: \"linear-gradient(99.84deg, rgba(167, 175, 187, 0.1) 0.49%, rgba(163, 192, 192, 0.24) 52.89%, rgba(129, 183, 200, 0.29) 88.71%);\",\r\n    orange: \"linear-gradient(99.84deg, rgba(255, 198, 166, 0.39) 0.49%, rgba(249, 226, 169, 0.55) 41.77%, rgba(240, 250, 203, 0.51) 88.71%);\",\r\n    purple: \"linear-gradient(99.84deg, rgba(57, 84, 125, 0.29) 0.49%, rgba(102, 104, 157, 0.38) 44.67%, rgba(147, 65, 154, 0.3) 88.71%);\"\r\n  }\r\n\r\nexport const setColor = (color)=> {\r\nreturn `color:${color? color:\"gold\"}; font-weight: bold;`;\r\n}\r\n\r\nexport const setBorder = ({width=\"1px\", type=\"solid\", color=\"black\"}={})=> {\r\n return `border: ${width} ${type} ${color}`\r\n}\r\n\r\nexport const getPadding = (t=0,r=0,b=0,l=0)=> {\r\n  return `padding:${t}rem ${r}rem ${b}rem ${l}rem`\r\n}\r\n\r\n\r\nexport const setTransition = ({\r\n  property = \"all\",\r\n  time = \"0.3s\",\r\n  timing = \"ease-in-out\"\r\n} = {}) => {\r\n  return `transition:${property} ${time} ${timing}`;\r\n};\r\n\r\n\r\nexport const setGrid = ({minWidth=\"150px\",gap=\"1rem\"}={})=> {\r\n return  {\r\n   display:\"grid\",\r\n   \"align-items\": \"center\",\r\n   \"justify-items\": \"center\",\r\n   \"grid-gap\": `${gap}`\r\n\r\n }\r\n}\r\n\r\nexport const setSelfGrid = ({alignSelf =\"center\", justifySelf=\"center\"}={})=> {\r\n  return  {\r\n    display:\"grid\",\r\n    \"align-self\":`${alignSelf}`,\r\n    \"justify-self\":`${justifySelf}`,\r\n\r\n \r\n  }\r\n }\r\n\r\n\r\nexport const setWidth = (width=100)=> {\r\n  return `width: ${width}%` \r\n}\r\n\r\n\r\nexport const sizes = {\r\n\r\n  xxlLarge:1600,\r\n  xlLarge:1400,\r\n  large: 1200,\r\n  desktop: 992,\r\n  tablet: 768,\r\n  phone: 576\r\n};\r\n","import styled from 'styled-components';\r\nimport {setGrid} from \"../styles.function\"\r\nimport {sizes} from \"../styles.function\"\r\nexport const Button = styled.button `\r\npadding: 0.5rem 1rem;\r\nbackground-color: ${({bgColor})=> bgColor || \"crimson\"};\r\ncolor: ${({color})=> color || \"white\"};\r\ntext-transform: uppercase;\r\nborder-radius:5px;\r\nmargin: 1rem;\r\n\r\n/* position: ${({position})=>position|| \"static\"};\r\ntop:50%;\r\nright:10%;\r\ntransform: translate(10%, -50%); */\r\n&:hover {\r\n    cursor: pointer;\r\n}\r\n&:disabled {\r\n    background-color: ${({bgColorDis})=> bgColorDis || \"grey\"};\r\ncolor: ${({color})=> color || \"#e1e1e1\"};\r\n}\r\n `\r\n\r\n export const ButtonWrapper = styled.div ` \r\n\r\n ${setGrid()};\r\n grid-template-columns: repeat(auto-fit, minmax(9rem, 1fr));\r\n width: 50%;\r\n@media (max-width: ${sizes.tablet}px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(6rem,1fr));\r\n    width: 100%;\r\n    grid-gap:0rem;\r\n}\r\n `\r\n\r\n\r\n\r\nexport const AbsoluteButton = styled(Button) `\r\nposition: absolute;\r\ntop:${({top})=>top||\"0rem\"};\r\ntop:${({right})=>right||\"0rem\"};\r\n\r\n\r\n `\r\n","import styled from \"styled-components\";\r\nimport {\r\n  setFlex,\r\n  setGrid,\r\n} from \"../styles.function\";\r\n\r\nimport { Button } from \"../StyledComponents/Button.style\";\r\nimport { sizes } from \"../styles.function\"; \r\n\r\n\r\nexport const StyledHeader = styled.header `\r\nwidth: 100vw;\r\n`\r\n\r\nexport const StyledNavbar = styled.nav`\r\n  width: 100%;\r\n\r\n  ${setGrid()}\r\n  grid-column:1/-1;\r\n  grid-template-columns: minmax(1rem, 7rem) 1fr minmax(3rem, 10rem);\r\n  position: relative;\r\n  align-self: start;\r\n\r\n  background: ${(props) => props.theme.secondaryColor};\r\n  @media (max-width: ${sizes.tablet}px) {\r\n    grid-template-columns: 1fr 3fr;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\nexport const UlWrapper = styled.ul`\r\n  ${setFlex()}\r\n  li {\r\n    list-style: none;\r\n    margin: 0 1rem;\r\n\r\n    a {\r\n      text-decoration: none;\r\n      text-transform: uppercase;\r\n      font-weight: bold;\r\n      font-size: 1.2rem;\r\n\r\n      color: ${(props) => props.theme.thirdColor};\r\n      &.active {\r\n        color: ${(props) => props.theme.thirdColorHover};\r\n      }\r\n      &:hover {\r\n        color: ${(props) => props.theme.thirdColorHover};\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: ${sizes.tablet}px) {\r\n  \r\n    position: absolute;\r\n    top: 0;\r\n  \r\n    flex-direction: column;\r\n    width: 100%;\r\n    background: ${(props) => props.theme.primaryColor};\r\n    min-height: 100vh;\r\n    z-index: 999;\r\n    /* margin:2rem; */\r\n  \r\n    transform: ${({toggledMenu})=>toggledMenu? \"translateX(0)\": \"translateX(-100%)\"};\r\n    transition: transform 0.3s ease-in-out;\r\n    position:fixed;\r\n    top: 0;\r\n    right: 0;\r\n    li {\r\n      a {\r\n        font-size:2rem;\r\n       \r\n       \r\n      }\r\n      &:not(:first-child) {\r\n        margin-top:1rem;\r\n        \r\n     \r\n     \r\n      }\r\n    }   \r\n  }\r\n`;\r\n\r\nexport const NavbarButton = styled(Button)`\r\n  background-color: ${(props) => props.theme.primaryColor};\r\n  color: ${(props) => props.theme.fourthColor};\r\n`;\r\n\r\nexport const NavbarButtonWrapper = styled.div`\r\n  @media (max-width: ${sizes.tablet}px) {\r\n    /* display: none; */\r\n    /* position: absolute; */\r\n\r\n  }\r\n`;\r\n\r\nexport const ToggledElem = styled.div`\r\n  width: 30px;\r\n  height: 3px;\r\n  background-color: #d47d1a;\r\n  z-index: 999;\r\n  margin: 6px;\r\n\r\n  transition: all 0.3s cubic-bezier(0.59, 0.09, 0.85, 0.23);\r\n  position:absolute;\r\n    left:5%;\r\n\r\n  \r\n  &.toggled-1 {\r\n        /* top:-2px; */\r\n        /* transform: translateX(-50%); */\r\n      /* transform: ${({toggledMenu})=> toggledMenu?\"rotate(45deg)\":\"rotate(0deg)\"};\r\n      left: ${({toggledMenu})=> toggledMenu?\"3px\":\"\"} */\r\n      transform:${({toggledMenu})=> toggledMenu?\"translate3d(0,0,0) rotate(45deg)\": \"translate3d(0,-8px,0)\"}\r\n  }\r\n  &.toggled-2 {\r\n      /* display:${({toggledMenu})=> toggledMenu?\"none\":\"block\"} */\r\n      transform:${({toggledMenu})=> toggledMenu?\"translate3d(0,0,0) scale(0.1,1)\":\"translate3d(0,0,0)\"}\r\n      /* transform:translate3d(0,0,0); */\r\n\r\n  }\r\n\r\n  &.toggled-3 {\r\n      /* display:${({toggledMenu})=> toggledMenu?\"none\":\"block\"} */\r\n      /* bottom:-2px; */\r\n      transform:${({toggledMenu})=> toggledMenu?\"translate3d(0,0,0) rotate(-45deg)\": \"translate3d(0,8px,0)\"}\r\n  }\r\n\r\n`;\r\n\r\nexport const ToggledWrapper = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  z-index: 999;\r\n  /* display: grid!important; */\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  right: 2%;\r\n  border-radius: 10px;\r\n  display: none;\r\n\r\n  transition: transform 0.5s ease-in, -webkit-transform 0.5s ease-in;\r\n  background-color: rgba(19, 11, 93, 0);\r\n  border: 2px solid #e2e2e2;\r\n  @media (max-width: ${sizes.tablet}px) {\r\n    display: grid;\r\n        position:fixed;\r\n        top:5%;\r\n\r\n  }\r\n`;\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledImgWrapper = styled.div `\r\nmargin: 0 auto;\r\nmax-width: ${({width})=>width|| \"20rem\"};\r\nheight: ${({height})=>height|| \"10rem\"};\r\nposition: ${({position})=>position|| \"static\"};\r\ntop:0;\r\nright:0;\r\n\r\n/* width: 30rem;\r\nheight: 10rem; */\r\n `\r\n\r\n export const StyledImg = styled.img `\r\nwidth: ${({width})=>width|| \"20rem\"};\r\nheight: ${({height})=>height|| \"10rem\"};\r\ndisplay: flex;\r\nobject-fit:cover;\r\n &:hover {\r\n     cursor:pointer;\r\n }\r\n  `","import styled from 'styled-components';\r\nimport {StyledImg} from \"../StyledComponents/StyledImg\"\r\nimport {sizes} from \"../styles.function\"\r\n\r\nexport const LogoImg = styled(StyledImg) `\r\n@media (max-width: ${sizes.tablet}px) {\r\nmargin-left: 1rem;\r\n   \r\n   }\r\n`","import React from 'react'\r\nimport IndianLogo from \"../../img/indian4.png\"\r\n\r\nimport {StyledImgWrapper} from \"../StyledComponents/StyledImg\"\r\nimport {LogoImg} from \"./Logo.style\"\r\nconst Logo = ({width, height}) => {\r\n    return (\r\n        <StyledImgWrapper width = {width} height = {height}>\r\n            <LogoImg src = {IndianLogo} width = {width} height = {height} />\r\n        </StyledImgWrapper>\r\n\r\n \r\n    );\r\n}\r\n\r\nexport default Logo;","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  StyledNavbar,\r\n  NavbarButton,\r\n  ToggledWrapper,\r\n  ToggledElem,\r\n  UlWrapper,\r\n  NavbarButtonWrapper,\r\n  StyledHeader\r\n} from \"./Header.style\";\r\n\r\nimport Logo from \"../Logo/Logo\";\r\nconst Header = ({ onChangeTheme }) => {\r\n  const [toggledMenu, setToggledMenu] = useState(false);\r\n\r\n  const showMenu = () => {\r\n    setToggledMenu((prevShowMenu) => !prevShowMenu);\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setToggledMenu(false);\r\n  };\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <StyledNavbar>\r\n        <Logo width=\"5rem\" height=\"5rem\" />\r\n        <UlWrapper toggledMenu={toggledMenu}>\r\n          <li>\r\n            <NavLink to=\"/countries\" onClick={toggleMenu}>\r\n              All countries\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/games\" onClick={toggleMenu}>\r\n              Play game\r\n            </NavLink>\r\n          </li>\r\n        </UlWrapper>\r\n\r\n        <NavbarButtonWrapper>\r\n          <NavbarButton onClick={onChangeTheme} position=\"absolute\">\r\n            Ch Th\r\n          </NavbarButton>\r\n        </NavbarButtonWrapper>\r\n        <ToggledWrapper onClick={showMenu}>\r\n          <ToggledElem\r\n            className=\"toggled-1\"\r\n            toggledMenu={toggledMenu}></ToggledElem>\r\n          <ToggledElem\r\n            className=\"toggled-2\"\r\n            toggledMenu={toggledMenu}></ToggledElem>\r\n          <ToggledElem\r\n            className=\"toggled-3\"\r\n            toggledMenu={toggledMenu}></ToggledElem>\r\n        </ToggledWrapper>\r\n      </StyledNavbar>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport {setGrid,setShadow,setTransition} from \"../../Components/styles.function\"\r\nimport {sizes} from \"../../Components/styles.function\"\r\nexport const StyledListWrapper = styled.ul `\r\ndisplay: grid;\r\n/* grid-template-columns: repeat(4,1fr); */\r\n${setGrid({ minWidth:\"10rem\", gap:\"1rem\"})}\r\nwidth: 100vw;\r\n\r\n/* min-height: 100vh; */\r\npadding: 0rem;\r\ngrid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); \r\nwidth: 100%;\r\n@media (max-width:${sizes.tabled}) {\r\n    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));\r\n}\r\n `\r\n\r\nexport const StyledListElem  = styled.li `\r\nlist-style: none;\r\ndisplay: grid;\r\njustify-items: center;\r\nalign-items: center;\r\n${setShadow.light};\r\nbackground: ${props=>props.theme.thirdColor};\r\n/* box-shadow: 0 0 10px rgba(0,0,0,0.5); */\r\nwidth: 20rem;\r\nheight: 10rem;\r\n${setTransition()};\r\n&:hover {\r\n    cursor: pointer;\r\n    background: ${props=>props.theme.thirdColorHover} \r\n}\r\n\r\nimg {\r\n    max-height: 2rem;\r\n    max-width:3rem;\r\n}\r\n\r\n@media (max-width:${sizes.tablet}px) {\r\n    width: 15rem;\r\n    height: 8rem;\r\n}\r\n\r\n `\r\n\r\n export const CountriespageWrapper = styled.div ` \r\n display: grid;\r\n grid-template-rows: 4rem 1fr;\r\n grid-column:1/-1;\r\n width: 80%;\r\n grid-gap:1rem;\r\n @media (max-width:${sizes.tablet}px) {\r\n    width: 100%;\r\n}\r\n \r\n `\r\n\r\n\r\n\r\n\r\n\r\n ","import styled,{css} from 'styled-components';\r\n\r\n\r\nconst baseStyle = css `\r\ntext-align:center;\r\ncolor: ${props=>props.color|| props.theme.secondaryColor || \"red\" };\r\ntext-transform: uppercase;\r\npadding-left:1rem;\r\npadding-right: 1rem;\r\n\r\n`\r\n\r\nexport const H1 = styled.h1 `\r\n${baseStyle};\r\nfont-size: 2.3rem;\r\n\r\n`\r\nexport const H2 = styled.h2 `\r\n${baseStyle};\r\nfont-size: 1.8rem;\r\n\r\n`\r\nexport const H3 = styled.h3 `\r\n${baseStyle};\r\nfont-size: 1.5rem;\r\n\r\n`\r\nexport const H4 = styled.h4 `\r\n${baseStyle};\r\nfont-size: 1.2rem;\r\n\r\n`\r\nexport const H5 = styled.h5 `\r\n${baseStyle};\r\nfont-size: 1.1rem;\r\n\r\n`","\r\nimport React from 'react';\r\nimport  {H1, H2,H3,H4,H5} from \"./Heading.style\"\r\n\r\n const Heading = ({type, children, ...restProps})=> {\r\n    if(type===\"h1\") {\r\n    return <H1  {...restProps}>{children}</H1>\r\n    }\r\n    else if(type===\"h2\") {\r\n        return <H2  {...restProps}>{children}</H2>\r\n    }\r\n    else if(type===\"h3\") {\r\n        return <H3  {...restProps}>{children}</H3>\r\n    }\r\n    else if(type===\"h4\") {\r\n        return <H4  {...restProps}>{children}</H4>\r\n    }\r\n    else if(type===\"h5\") {\r\n        return <H5  {...restProps}>{children}</H5>\r\n    }\r\n}\r\nexport default Heading\r\n    \r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { StyledListElem } from \"./Countries.style\";\r\nimport {\r\n  StyledImgWrapper,\r\n  StyledImg,\r\n} from \"../../Components/StyledComponents/StyledImg\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Heading from \"../../Components/Heading/Heading\";\r\n\r\n\r\nconst Country = ({\r\n  country: { name, flag, population, region, capital },\r\n  history,\r\n}) => {\r\n  const redirect = () => {\r\n    history.push(`countries/${name}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledListElem onClick={redirect}>\r\n        <Heading type=\"h4\">{name}</Heading>\r\n        <StyledImgWrapper width=\"2rem\" height=\"2rem\">\r\n          <StyledImg src={flag} alt=\"\"></StyledImg>\r\n        </StyledImgWrapper>\r\n      </StyledListElem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Country);\r\n","import styled from 'styled-components';\r\nimport {setSelfGrid} from \"../styles.function\";\r\nimport {sizes} from \"../styles.function\"\r\nexport const SelectWrapper = styled.div `\r\n\t${setSelfGrid};\r\n\t@media (max-width:${sizes.tablet}px) {\r\n\twidth: 100%;\r\n\t\r\n}\r\n `\r\n\r\n export const StyledSelect = styled.select`\r\n \r\n\r\n\tfont-size: 16px;\r\n\tfont-family: sans-serif;\r\n\tfont-weight: 700;\r\n\tcolor: #444;\r\n\tline-height: 1.3;\r\n\tpadding: .6em 1.4em .5em .8em;\r\n\twidth: 30vw;\r\n\tmax-width: 100%;\r\n\tbox-sizing: border-box;\r\n\tmargin: 0;\r\n\tborder: 1px solid #aaa;\r\n\tbox-shadow: 0 1px 0 1px rgba(0,0,0,.04);\r\n\tborder-radius: .5em;\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tbackground-color: #fff;\r\n\tbackground-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\r\n\t  linear-gradient(to bottom, #ffffff 0%,#e5e5e5 100%);\r\n\tbackground-repeat: no-repeat, repeat;\r\n\tbackground-position: right .7em top 50%, 0 0;\r\n\tbackground-size: .65em auto, 100%;\r\n\r\n&::-ms-expand {\r\n\tdisplay: none;\r\n}\r\n&:hover {\r\n\tborder-color: #888;\r\n}\r\n&:focus {\r\n\tborder-color: #aaa;\r\n\tbox-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);\r\n\tbox-shadow: 0 0 0 3px -moz-mac-focusring;\r\n\tcolor: #222;\r\n\toutline: none;\r\n}\r\n& option {\r\n\tfont-weight:normal;\r\n}\r\n\r\n@media (max-width:${sizes.tablet}px) {\r\n\twidth: 100%;\r\n}\r\n  `","import React from \"react\";\r\nimport {SelectWrapper,StyledSelect} from \"./Select.style\"\r\n\r\nconst Select = ({ dataArray,selectSomething,optionsData }) => {\r\n  const getOptions = (dataArray) => {\r\n    if (dataArray) {\r\n      const options = optionsData.map((data, index) => (\r\n        <option value={data} key={index} >\r\n          {data}\r\n        </option>\r\n      ));\r\n      return options;\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SelectWrapper>\r\n      <StyledSelect name=\"selectCountry\" id=\"selectCountry\" onChange = {(e)=>selectSomething(e.target.value)}>\r\n        <option>Choose region</option>\r\n        <option value = \"all\">All</option>\r\n        {getOptions(dataArray)}\r\n      </StyledSelect>\r\n    </SelectWrapper>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\n\r\nconst SelectorsDashBoard = ({children}) => {\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectorsDashBoard;","import styled from 'styled-components';\r\nimport {setFlex, setColor,setBorder,setTransition} from \"../../Components/styles.function\"\r\nexport const PageListWrapper = styled.ul `\r\n${setFlex()}\r\n `\r\n export const PageListElem =styled.li ` \r\n /* ${setBorder()}; */\r\n width:2rem;\r\n height:2rem;\r\n list-style:none;\r\n text-align:center;\r\n ${setColor(\"royalBlue\")};\r\n color: ${props=>props.theme.paginationColor};\r\n ${setTransition()};\r\n &.active {\r\n     background-color: ${props=>props.theme.secondaryColor};\r\n }\r\n &:hover {\r\n     cursor:pointer;\r\n }\r\n a {\r\n     text-decoration:none;\r\n }\r\n `\r\n export const PaginationWrapper= styled.div `\r\n display:inline-flex;\r\n position: relative;\r\n\r\n  `\r\n\r\n  export const MainPaginationWrapper = styled.div `\r\n  display: flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  z-index: 10;\r\n   `","import styled from 'styled-components';\r\n\r\nconst SvgElement = styled.svg `\r\n/* width:${({width})=>width|| \"3rem\"};\r\nheight:${({height})=>height|| \"3rem\"}; */\r\n `\r\n export default SvgElement\r\n\r\n ","import React from \"react\";\r\nimport SvgElement from \"./SvgComponents.style\";\r\nconst LeftArrowSvg = ({ height, width, navigate }) => {\r\n\r\n\r\n\r\nreturn (\r\n    <div onClick={navigate}>\r\n      <SvgElement\r\n       width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" fill=\"green\" clip-rule=\"evenodd\" stroke=\"darkRed\"><path d=\"M21 24l-18-12 18-12v24zm-16.197-12l15.197 10.132v-20.263l-15.197 10.131\"/>\r\n      </SvgElement>\r\n    </div>\r\n  );\r\n};\r\n   \r\n\r\n\r\nexport default LeftArrowSvg;\r\n","import React from \"react\";\r\nimport SvgElement from \"./SvgComponents.style\";\r\nconst LeftArrowSvg = ({ height, width, navigate }) => {\r\n    return (\r\n        <div onClick={navigate}>\r\n          <SvgElement\r\n            width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"green\" stroke=\"darkRed\"><path d=\"M3 24l18-12-18-12v24zm16.197-12l-15.197 10.132v-20.263l15.197 10.131\"/>\r\n          </SvgElement>\r\n        </div>\r\n    )\r\n    }\r\nexport default LeftArrowSvg;\r\n","import React from \"react\";\r\nimport {\r\n  PageListWrapper,\r\n  PageListElem,\r\n  PaginationWrapper,\r\n  MainPaginationWrapper,\r\n} from \"./Pagination.style\";\r\nimport { ArrowLength } from \"../../img/left.svg\";\r\n\r\nimport LeftArrow from \"../../Components/SvgComponents/LeftArrow\";\r\nimport RightArrow from \"../../Components/SvgComponents/RightArrow\";\r\nimport { useState } from \"react\";\r\n\r\nconst Pagination = ({\r\n  items,\r\n  itemsQuantityOnPage,\r\n  paginatedItems,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  // assign observed page, page we change clicking right or left and change ot depending on terms\r\n  const [observedPage, setObservedPage] = useState(0)\r\n\r\n\r\n  const navigateBack = () => {\r\n    if (observedPage > 1) {\r\n      setObservedPage(observedPage-1)\r\n    }\r\n    else {\r\n      setObservedPage(0)\r\n    }\r\n  };\r\n  const navigateForward = (pagesList) => {\r\n\r\n    if (observedPage < pagesList.length-5) {\r\n      setObservedPage(observedPage+1)\r\n    }\r\n  };\r\n  const getItems = (items, itemsQuantityOnPage) => {\r\n    if (items) {\r\n      const pages = Math.ceil(items.length / +itemsQuantityOnPage);\r\n      const pagesList = [...Array(pages).keys()];\r\n\r\n      return (\r\n        <PaginationWrapper>\r\n          <LeftArrow\r\n            src={ArrowLength}\r\n            position=\"absolute\"\r\n            width=\"2rem\"\r\n            height=\"2rem\"\r\n            navigate={() => navigateBack(pagesList)}></LeftArrow>\r\n          \r\n          <PageListWrapper>\r\n            {pagesList\r\n              .map((page) => (\r\n                <PageListElem\r\n                  key={page}\r\n                  className={currentPage === page + 1 && \"active\"}\r\n                  onClick={() => paginatedItems(page, itemsQuantityOnPage,pagesList.length)}>\r\n                  {page + 1}\r\n                </PageListElem>\r\n              ))\r\n              .filter((_, index) => {\r\n                return index>= observedPage && index <  observedPage+5;\r\n              })}\r\n          </PageListWrapper>\r\n          <RightArrow\r\n            src={ArrowLength}\r\n            position=\"absolute\"\r\n            width=\"2rem\"\r\n            height=\"2rem\"\r\n            navigate={() => navigateForward(pagesList)}></RightArrow>\r\n        </PaginationWrapper>\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <MainPaginationWrapper>\r\n           {getItems(items, itemsQuantityOnPage)}\r\n    </MainPaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\nexport const LoaderStyled = styled.div `\r\ndisplay: inline-block;\r\n    width: 80px;\r\n    height: 80px;\r\n    &:after {\r\n        content: \" \";\r\n    display: block;\r\n    width: 64px;\r\n    height: 64px;\r\n    margin: 8px;\r\n    border-radius: 50%;\r\n    border: 6px solid black;\r\n    border-color: black transparent #fff transparent;\r\n    animation: lds-dual-ring 1.2s linear infinite;\r\n    }\r\n    @keyframes lds-dual-ring {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n `\r\n\r\n\r\n\r\n  ","import React from 'react';\r\n\r\nimport {LoaderStyled}from \"./Loader.style\"\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderStyled className=\"lds-dual-ring\"></LoaderStyled>\r\n    );\r\n}\r\n\r\nexport default Loader;","\r\nexport const getCountries = (state=>state.country.countries)\r\nexport const getLoading = (state=>state.country.countryLoading)\r\n\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Country from \"./Country\";\r\nimport { StyledListWrapper } from \"./Countries.style\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Select from \"../../Components/Select/Select\";\r\nimport SelectorsDashBoard from \"./Selectors/Selectors\";\r\nimport { CountriespageWrapper } from \"./Countries.style\";\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\nimport {\r\n  fetchAndSetServerData,\r\n  fetchSingleCountry,\r\n} from \"../../redux/actionsCreators/countriesActionCreators\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nimport {\r\n  getCountries,\r\n  getLoading,\r\n} from \"../../redux/Selectors/countriesSelectors\";\r\n\r\nconst CountriesMapState = () => {\r\n  const dispatch = useDispatch();\r\n  const filteredCountryList = (quantity) => {\r\n    return countriesList\r\n      ? countriesList.filter((_, indexElem) => {\r\n          return indexElem < quantity;\r\n        })\r\n      : null;\r\n  };\r\n\r\n  //using useState to set our current page\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // we save all fetchted data then divide it on pages. When click any pages we receive countries that belong to this page\r\n  const [paginatedItems, setPaginatedItems] = useState(null);\r\n\r\n  const countriesList = useSelector(getCountries);\r\n  const countryLoading = useSelector(getLoading);\r\n\r\n  //type of region we transmit to our Select component\r\n  const optionsData = [\r\n    \"Asia\",\r\n    \"Europe\",\r\n    \"Africa\",\r\n    \"Oceania\",\r\n    \"Americas\",\r\n    \"Polar\",\r\n  ];\r\n \r\n // using useEffect to set initially our paginated items\r\n  useEffect(() => {\r\n    if (countriesList) {\r\n      setPaginatedItems(filteredCountryList(10));\r\n      setCurrentPage(1);\r\n    }\r\n  }, [countriesList]);\r\n\r\n  //fetch country depending on selected value\r\n  const selectCountry = (value) => {\r\n    if (value === \"all\") {\r\n      dispatch(fetchAndSetServerData(`https://restcountries.eu/rest/v2/all`));\r\n    } else {\r\n    }\r\n    dispatch(\r\n      fetchAndSetServerData(`https://restcountries.eu/rest/v2/region/${value}`)\r\n    );\r\n  };\r\n\r\n\r\n// filtered country to display only that country that belong to this page\r\n  const filteredCountries = useCallback(\r\n    (index = 0, quantity = 10) => {\r\n      if (countriesList) {\r\n        const filteredItems = countriesList.filter((_, indexElem) => {\r\n          if (index === 0) {\r\n            setCurrentPage(1);\r\n            return indexElem < quantity;\r\n          } else {\r\n            setCurrentPage(index + 1);\r\n            // if(pagesListLength)\r\n            return (\r\n              indexElem <= (index + 1) * quantity &&\r\n              indexElem > index * quantity\r\n            );\r\n          }\r\n        });\r\n\r\n        setPaginatedItems(filteredItems);\r\n      }\r\n      return null;\r\n    },\r\n    [countriesList]\r\n  );\r\n\r\n\r\n\r\n  return countryLoading ? (\r\n    <>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <CountriespageWrapper>\r\n      <SelectorsDashBoard>\r\n        <Select\r\n          dataArray={countriesList}\r\n          selectSomething={selectCountry}\r\n          optionsData={optionsData}\r\n        />\r\n      </SelectorsDashBoard>\r\n      <Pagination\r\n        items={countriesList}\r\n        itemsQuantityOnPage=\"10\"\r\n        paginatedItems={filteredCountries}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n\r\n      {paginatedItems && (\r\n        <StyledListWrapper>\r\n          {/* // <Input placeholder = \"start search by countru name\" getInputName={getInputName}></Input> */}\r\n\r\n          {paginatedItems.map((country, index) => {\r\n            return (\r\n              <Country\r\n                country={country}\r\n                key={country.name}\r\n                fetchSingleCountry={fetchSingleCountry}\r\n              />\r\n            );\r\n          })}\r\n        </StyledListWrapper>\r\n      )}\r\n    </CountriespageWrapper>\r\n  );\r\n};\r\n\r\nexport default CountriesMapState;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardWrapper = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content:center;\r\nalign-items:center;\r\nmin-height:70vh;\r\nbackground: ${props=>props.theme.background};\r\n\r\n `\r\n\r\n export const CardInnerWrapper = styled.div `\r\n\r\n `\r\n\r\n","import React from 'react';\r\nimport {StyledImgWrapper,StyledImg} from \"./StyledComponents/StyledImg\"\r\nconst Img = ({src, width, height}) => {\r\n\r\n    return (\r\n        <StyledImgWrapper width={width} height = {height} >\r\n            <StyledImg  src = {src} width={width} height = {height}/>\r\n        </StyledImgWrapper>\r\n    );\r\n}\r\n\r\nexport default Img;","import styled from 'styled-components';\r\nimport {setFlex,setGrid, setShadow} from \"../styles.function\"\r\n\r\nexport const Wrapper = styled.div `\r\n${setFlex()};\r\nflex-direction: ${({flexDirection})=>flexDirection|| \"row\"} ;\r\nbackground:${props=>props.theme.secondaryColor};\r\npadding:1rem;\r\nborder-radius:1rem;\r\n `\r\n\r\n export const InnerWrapper  = styled.div `\r\n/* ${setFlex()};\r\n flex-direction: column; */\r\n ${setShadow.dark}\r\n/* border: 1px solid #000; */\r\ndisplay:grid;\r\nmargin:1rem;\r\npadding:1rem;\r\nwidth: ${({width})=>width || \"inherit\"};\r\nheight: ${({height})=>height || \"inherit\"};\r\ntext-align: center;\r\nbackground:${props=>props.color||props.theme.secondaryColor};\r\nborder-radius:1rem;\r\njustify-items:center;\r\nalign-items:center;\r\nvertical-align:center;\r\n\r\nspan {\r\n  /* color:${props=>props.theme.fourthColor}; */\r\n  font-size: 1.1rem;\r\n\r\n}\r\n  `\r\n\r\n\r\nexport const GridWrapper = styled.div ` \r\n${setGrid(\"10rem\")};\r\ngrid-column: 1/-1;\r\ngrid-template-rows: auto;\r\n\r\nwidth: 100%;\r\n`\r\n\r\nexport const MainWrapper =styled(GridWrapper) `\r\ngrid-template-columns: 1fr;\r\nposition: relative;\r\n\r\n\r\n`\r\n\r\n\r\nexport const SpanWrapper =styled.div `\r\n${setGrid()}\r\ngrid-template-columns: 25% 75%;\r\nwidth: 100%;\r\n${setShadow.bottomLight};\r\npadding-top:1rem;\r\npadding-bottom:1rem;\r\nmargin-top:0.5rem;\r\ngrid-gap:0rem;\r\n\r\n `\r\n\r\n export const DetailInnerWrapper = styled(InnerWrapper)`\r\n /* grid-template-columns: 20% 80%; */\r\n width: 100%;\r\n `\r\n export const ListOfItemsWrapper = styled(InnerWrapper)`\r\n width: 100%;\r\n margin:0rem;\r\n padding-left: 0.5rem;\r\n /* padding:0rem; */\r\n grid-gap:0rem;\r\n /* grid-template-columns: repeat(auto-fit, minmax(min-content, 1fr)) */\r\n box-shadow: none\r\n `","import styled from \"styled-components\";\r\nimport { setColor,color } from \"../styles.function\";\r\n\r\n\r\nexport const OutputSpan = styled.span`\r\n  /* ${setColor(color.royalBrown)}\r\n  padding-left:0.5rem; */\r\n  color:${props=>props.color===\"secondary\"?props.theme.secondaryColor: props.theme.primaryColor};\r\n  font-weight: bold;\r\n  text-align: left;\r\n  padding-left: ${props=>props.paddingLeft||\"0rem\"};\r\n  /* padding-left: 0.6rem; */\r\n  /* text-transform:uppercase; */\r\n  \r\n`;\r\n\r\n\r\nexport const CommonSpan = styled.span `\r\n  color:${props=>props.theme.fourthColor};\r\n  text-align: left;\r\n  font-size: 1rem;\r\n  padding-left: 0.5rem;\r\n  \r\n `\r\n","import React from \"react\";\r\nimport {\r\n  OutputSpan,\r\n  CommonSpan,\r\n} from \"../StyledComponents/Span.style\";\r\nimport { SpanWrapper } from \"../StyledComponents/Wrappers\";\r\nconst ListOfItems = ({ array, type, singleElem }) => {\r\n  const getSpan = (type, elem, index) => {\r\n    if (type === \"lastSpan\") {\r\n      return <OutputSpan key={index}>{elem}</OutputSpan>;\r\n    } else {\r\n      return <OutputSpan key={index}>{elem}, </OutputSpan>;\r\n    }\r\n  };\r\n\r\n  const getItems = (array, type) => {\r\n\r\n    if (array && array.length > 0) {\r\n      return array.map((elem, index) => {\r\n        if (type === \"borders\" || type === \"timezones\") {\r\n          if (index < array.length - 1) {\r\n            return getSpan(null, elem, index);\r\n          } else {\r\n            return getSpan(\"lastSpan\", elem, index);\r\n          }\r\n        } else if (type === \"languages\" || type === \"currencies\") {\r\n          const names = elem.name;\r\n\r\n          if (index < array.length - 1) {\r\n            return getSpan(null, names, index);\r\n          } else {\r\n            return getSpan(\"lastSpan\", names, index);\r\n          }\r\n        }\r\n        return null\r\n      });\r\n    }\r\n    return;\r\n  };\r\n  return (\r\n    <>\r\n      {array ? (\r\n        <SpanWrapper>\r\n          <CommonSpan>{type}</CommonSpan>\r\n          <div>{getItems(array, type)}</div>\r\n        </SpanWrapper>\r\n      ) : (\r\n        <SpanWrapper>\r\n          <CommonSpan>{type}</CommonSpan>\r\n          <OutputSpan>{singleElem.toLocaleString('ru')}</OutputSpan>\r\n        </SpanWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListOfItems;\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { fetchSingleCountry } from \"../../redux/actionsCreators/countriesActionCreators\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { CardWrapper } from \"../../Components/StyledComponents/CardWrapper\";\r\nimport Img from \"../../Components/Img\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\nimport Heading from \"../../Components/Heading/Heading\";\r\n\r\nimport { DetailInnerWrapper,ListOfItemsWrapper } from \"../../Components/StyledComponents/Wrappers\";\r\n\r\nimport { Button } from \"../../Components/StyledComponents/Button.style\";\r\nimport ListOfItems from \"../../Components/ListOfItems/ListOfItems\";\r\nconst CountryDetail = ({ match, fetchSingleCountry, history }) => {\r\n  // const {name, population,region, capital,flag} = useSelector(state=>state.country.currentCountry)\r\n  const selectedCountry = useSelector((state) => state.country.currentCountry);\r\n  const countryLoading = useSelector((state) => state.country.countryLoading);\r\n\r\n  const displayCountry = (selectedCountry) => {\r\n    if (selectedCountry && !countryLoading) {\r\n      const {\r\n        name,\r\n        population,\r\n        region,\r\n        capital,\r\n        flag,\r\n        borders,\r\n        languages,\r\n        timezones,\r\n        area,\r\n        currencies,\r\n      } = selectedCountry;\r\n\r\n\r\n      const goback = () => {\r\n        history.push(\"/countries\");\r\n      };\r\n      return (\r\n        <DetailInnerWrapper>\r\n          <Heading type=\"h3\" color=\"#fae07f\">\r\n            {name}\r\n          </Heading>\r\n          <Img src={flag} />\r\n          <ListOfItemsWrapper>\r\n            <ListOfItems singleElem={region} type=\"region\" />\r\n            <ListOfItems singleElem={population} type=\"population\" />\r\n            <ListOfItems singleElem={area} type=\"area\" />\r\n            \r\n            <ListOfItems singleElem={capital} type=\"capital\" />\r\n            <ListOfItems array={borders} type=\"borders\" />\r\n            <ListOfItems array={languages} type=\"languages\" />\r\n            <ListOfItems array={currencies} type=\"currencies\" />\r\n            <ListOfItems array={timezones} type=\"timezones\" />\r\n          </ListOfItemsWrapper>\r\n\r\n          <Button onClick={goback}>Back</Button>\r\n        </DetailInnerWrapper>\r\n      );\r\n    } else {\r\n      return <Loader />;\r\n    }\r\n  };\r\n  //\r\n  useEffect(() => {\r\n    fetchSingleCountry(\r\n      `https://restcountries.eu/rest/v2/name/${match.params.id}`\r\n    );\r\n  }, [fetchSingleCountry]);\r\n\r\n  return <CardWrapper>{displayCountry(selectedCountry)}</CardWrapper>;\r\n};\r\n\r\nexport default withRouter(connect(null, { fetchSingleCountry })(CountryDetail));\r\n","import styled from 'styled-components';\r\nimport {setGrid} from \"../styles.function\"\r\nexport const AppWrapper = styled.main `\r\n${setGrid()};\r\ngrid-template-columns: 1fr;\r\ngrid-template-rows:5rem 1fr;\r\nmin-height: 100vh;\r\nbackground: ${props=>props.theme.primaryColor}; \r\n`","import styled from \"styled-components\";\r\nimport {setFlex,setShadow,setGrid,setBorder } from \"../../Components/styles.function\"\r\nimport {GridWrapper} from \"../../Components/StyledComponents/Wrappers\"\r\n\r\nimport {\r\n  StyledImgWrapper,\r\n\r\n} from \"../../Components/StyledComponents/StyledImg\";\r\nexport const GamesWrapper = styled.div`\r\n  /* display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  ${setGrid()}\r\n  /* grid-template-columns: 1fr;  */\r\n  width: 80%;\r\n  \r\n\r\n`;\r\n\r\nexport const NewButton = styled.button``;\r\n\r\n\r\n\r\nexport const TipButton = styled(NewButton)`\r\n  /* background-color: black; */\r\n  ${setFlex()}\r\n  color: white;\r\n  ${setShadow.dark};\r\n  &:hover {\r\n  }\r\n`;\r\n\r\nexport const AnswerMainWrapper = styled.div ` \r\n/* height: 3rem; */\r\npadding:0.5rem;\r\n`\r\n\r\nexport const GamesImgWrapper = styled(StyledImgWrapper) `\r\n/* ${setBorder({width:\"10px\", type:\"double\", color:\"red\"})}; */\r\nbox-sizing:content-box;\r\n `\r\n\r\n export const GamesMainWrapper = styled(GridWrapper) `\r\n grid-template-columns: 1fr;\r\n position: relative;\r\n `","import styled from 'styled-components';\r\n\r\nexport const StyledInput = styled.input `\r\nwidth: 18rem;\r\nheight:2rem;\r\nbox-shadow: 0 0 10px rgba(0,0,0,0.5);\r\ntransition: all 0.5s;\r\nmargin: 1rem auto;\r\n\r\n&:focus {\r\n    /* background-color: ${({bgColor})=>bgColor|| \"#c7c7c740\" } */\r\n}\r\n `\r\n\r\n export const StyledInputWrapper = styled.div ` \r\n \r\n \r\n `","import React from \"react\";\r\nimport { StyledInputWrapper, StyledInput } from \"./Input.style\";\r\nconst Input = ({ type, getInputName, value, disabled, placeholder }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      <StyledInput\r\n        type={type || \"string\"}\r\n        onChange={(e) => getInputName(e.target.value)}\r\n        value={value}\r\n        disabled={disabled}\r\n        placeholder={placeholder}></StyledInput>\r\n    </StyledInputWrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\nimport {setFlex, setBorder,linearGradient,getPadding} from \"../../Components/styles.function\"\r\nexport const AnswerWrapper = styled.div `\r\n${setFlex()};\r\n/* ${setBorder(\"2px\")}; */\r\nbackground: ${({type})=> type===\"wrong\"?linearGradient.orange:linearGradient.light};\r\nmargin: 1rem;\r\npadding:1rem;\r\nfont-weight: bold;\r\ntext-transform:uppercase;\r\n;\r\n/* ${getPadding(1,1,1,1)}; */\r\n/* height: 5rem; */\r\n `","import React from \"react\";\r\nimport { AnswerWrapper } from \"./Answer.style\";\r\nimport {OutputSpan} from \"../StyledComponents/Span.style\"\r\nconst Answer = ({ country, answer, type }) => {\r\n  const param = country[type].toLowerCase();\r\n  const answerLowerCase = answer? answer.toLowerCase(): null\r\n\r\n\r\n  const getAnswer = (param,answer) => {\r\n\r\n    if (answer) {\r\n      return param === answer ? (\r\n        <AnswerWrapper >\r\n          <span>It is right answer</span>\r\n        </AnswerWrapper>\r\n      ) : (\r\n        <AnswerWrapper type = \"wrong\">\r\n          <span>It is wrong answer. Right answer is  </span> <OutputSpan color = \"secondary\" paddingLeft = \"0.5rem\"> {country.name}</OutputSpan>\r\n        </AnswerWrapper>\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n  return <>{getAnswer(param, answerLowerCase)}</>;\r\n};\r\n\r\nexport default Answer;\r\n","import styled from 'styled-components';\r\nimport {GridWrapper} from \"../StyledComponents/Wrappers\"\r\nimport {sizes,setBorder} from \"../styles.function\"\r\nimport {OutputSpan} from \"../StyledComponents/Span.style\"\r\n\r\nexport const ResultsWrapper = styled.div `\r\n ${setBorder()};\r\n background-color: ${props=>props.theme.thirdColor};\r\n/* width: 60rem; */\r\npadding:1rem;\r\ntext-transform:uppercase;\r\n\r\n`\r\n\r\nexport const GameStatistics = styled(GridWrapper) `\r\nwidth:50%;\r\ngrid-column: 1/-1;\r\n\r\ngrid-template-columns: repeat(auto-fit, minmax(9rem, 1fr)); \r\n@media (max-width:${sizes.xxlLarge}px) {\r\n    width: 100%;\r\n}\r\n`\r\n\r\nexport const ResultSpan = styled(OutputSpan) `\r\ncolor:${props=> props.theme.secondaryColor}\r\n `","import React from \"react\";\r\nimport {\r\n  \r\n  InnerWrapper,\r\n\r\n} from \"../StyledComponents/Wrappers\";\r\nimport {ResultsWrapper,GameStatistics} from \"./Results.style\"\r\nimport {ResultSpan} from \"../Results/Results.style\"\r\nimport {OutputSpan} from \"../StyledComponents/Span.style\"\r\nimport {CommonSpan} from \"../StyledComponents/Span.style\"\r\n\r\nconst Results = React.memo(({\r\n  answers: { wrongAnswers, rightAnswers, totalAnswers, rate },\r\n  gameStatus,\r\n}) => {\r\n\r\n  const renderResults = (gameStatus) => {\r\n    if (gameStatus === \"run\") {\r\n      return (\r\n        <GameStatistics>\r\n          <InnerWrapper width=\"100px\" height=\"80px\">\r\n            <CommonSpan>Right</CommonSpan>\r\n            <OutputSpan>{rightAnswers}</OutputSpan>\r\n          </InnerWrapper>\r\n          <InnerWrapper width=\"100px\" height=\"80px\">\r\n            <CommonSpan>Wrong</CommonSpan>\r\n            <OutputSpan>{wrongAnswers}</OutputSpan>\r\n          </InnerWrapper>\r\n          <InnerWrapper width=\"100px\" height=\"80px\">\r\n            <CommonSpan>Total</CommonSpan>\r\n            <OutputSpan>{totalAnswers}</OutputSpan>\r\n          </InnerWrapper>\r\n          <InnerWrapper width=\"100px\" height=\"80px\">\r\n            <CommonSpan>Rate</CommonSpan>\r\n            <OutputSpan>{rate}%</OutputSpan>\r\n          </InnerWrapper>\r\n        </GameStatistics>\r\n      );\r\n    } else if (gameStatus === \"finish\") {\r\n      return (\r\n        <ResultsWrapper >\r\n          <p><span>game over.</span> <ResultSpan> Your rate is {rate}%</ResultSpan> </p>\r\n          <span>Do you want to try more ? </span>\r\n        </ResultsWrapper>\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  return <>{renderResults(gameStatus)}</>;\r\n});\r\n\r\nexport default Results;\r\n","import {Wrapper} from \"../StyledComponents/Wrappers\"\r\nimport styled from 'styled-components';\r\n\r\nexport const TipWrapper = styled(Wrapper) `\r\nposition:absolute;\r\nalign-items:flex-start;\r\ntop: 0%;\r\nright: 2%;\r\nz-index: 99;\r\n`\r\n\r\n export const TipInnerWrapper = styled.div `\r\n\r\n  `","import React from \"react\";\r\nimport {OutputSpan,CommonSpan} from \"../StyledComponents/Span.style\"\r\n\r\nimport {TipWrapper,TipInnerWrapper} from \"../Tips/Tips.style\"\r\nconst Tips = ({ country :{population, capital, region}}) => {\r\n  return (\r\n    <TipWrapper flexDirection = \"column\">\r\n      <TipInnerWrapper>\r\n        <CommonSpan>This country is located in </CommonSpan>\r\n        <OutputSpan>{region}</OutputSpan>\r\n      </TipInnerWrapper>\r\n      <TipInnerWrapper>\r\n        <CommonSpan>This country has population </CommonSpan>\r\n        <OutputSpan>{population.toLocaleString('ru')} </OutputSpan>\r\n      </TipInnerWrapper>\r\n      <TipInnerWrapper>\r\n        <CommonSpan>The capital of this country is </CommonSpan>\r\n        <OutputSpan>{capital}</OutputSpan>\r\n      </TipInnerWrapper>\r\n    </TipWrapper>\r\n  )\r\n  }\r\nexport default Tips;\r\n","export const getRandomData = (array)=> {\r\n    if(!array) {\r\n        return\r\n    }\r\n    return array[Math.floor(Math.random() * (array.length  + 1))]\r\n}\r\n\r\n\r\n//Get Maximum number of elem\r\nexport const getTotalMax = (state)=> {\r\n    const obj =state.games.gamesArchive;\r\n\r\n\r\n    if(Object.values(obj).length>0) {\r\n        const arr = Object.values(obj)\r\n     return  arr.sort((a, b)=> {\r\n        if (b.rate > a.rate) {\r\n            \r\n          return 1;\r\n\r\n        }\r\n        if (b.rate < a.rate) {\r\n          return -1;\r\n        }\r\n      \r\n        return 0;\r\n      })[0].rate;\r\n     \r\n\r\n    }\r\n    return\r\n\r\n}\r\n\r\n\r\nexport const getFilteredElem = (arr, attr, value)=> {\r\n return arr.filter(elem=>elem[attr].toLowerCase().includes(value.toLowerCase()))\r\n}\r\n\r\n","import {createSelector } from \"reselect\";\r\nexport const getRandomCountry = state=>state.games.randomCountry\r\nexport const getCountryAnswer = state=>state.games.countryAnswer\r\nexport const getAnswers = state=>state.games.answers\r\nexport const getTotalAnswers = state=>state.games.totalAnswers\r\nexport const getRate = state=>state.games.rate\r\nexport const getGameStatus = state=>state.games.gameStatus\r\nexport const getGamesArchive = state=>state.games.gamesArchive\r\n\r\n//calculate max value in games archive to display it on screnn\r\nexport const getTotalMax=createSelector (\r\n [getGamesArchive], obj => {\r\n    if( obj && Object.values(obj).length>0) {\r\n        const arr = Object.values(obj)\r\n     return  arr.sort((a, b)=> {\r\n        if (b.rate > a.rate) {\r\n            \r\n          return 1;\r\n        }\r\n        if (b.rate < a.rate) {\r\n          return -1;\r\n        }\r\n      \r\n        return 0;\r\n      })[0].rate;\r\n     \r\n    \r\n    }\r\n    return null\r\n\r\n})\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport {InnerWrapper} from \"../StyledComponents/Wrappers\"\r\n\r\nexport const MaxResultWrapper = styled(InnerWrapper) `\r\n\r\n    max-width: 10rem;\r\n    span {\r\n        color:${props=>props.theme.fourthColor}\r\n    }\r\n `","import React from \"react\";\r\nimport { MaxResultWrapper } from \"./MaxResult.style\";\r\nconst MaxResult = React.memo(({ maxResult }) => {\r\n\r\n  const getMaxResult = (maxResult) => {\r\n    if (maxResult) {\r\n      return (\r\n        <MaxResultWrapper>\r\n          <span>Max Result</span>\r\n          <span>{maxResult}%</span>\r\n        </MaxResultWrapper>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <MaxResultWrapper>\r\n          <span>MaxResult</span>\r\n        <span>0</span>\r\n      </MaxResultWrapper>\r\n      )\r\n\r\n    }\r\n\r\n  };\r\n  return <>{getMaxResult(maxResult)}</>;\r\n});\r\n\r\nexport default MaxResult;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button } from \"../../Components/StyledComponents/Button.style\";\r\nimport { StyledImg } from \"../../Components/StyledComponents/StyledImg\";\r\nimport { GamesImgWrapper } from \"./Games.style\";\r\nimport Input from \"../../Components/Input/Input\";\r\nimport Answer from \"../../Components/Answer/Answer\";\r\nimport Results from \"../../Components/Results/Results\";\r\nimport { GamesWrapper, AnswerMainWrapper } from \"./Games.style\";\r\nimport { ButtonWrapper } from \"../../Components/StyledComponents/Button.style\";\r\nimport Tips from \"../../Components/Tips/Tips\";\r\nimport { getRandomData } from \"../../utils\";\r\n\r\nimport {\r\n  getRandomCountry,\r\n  getCountryAnswer,\r\n  getAnswers,\r\n  getTotalAnswers,\r\n  getRate,\r\n  getGameStatus,\r\n  getTotalMax,\r\n} from \"../../redux/Selectors/gamesSelectors\";\r\nimport { getCountries } from \"../../redux/Selectors/countriesSelectors\";\r\nimport {\r\n  setRandomCountry,\r\n  setCountryAnswer,\r\n  startNewGame,\r\n} from \"../../redux/actionsCreators/games.actionCreators\";\r\nimport { GamesMainWrapper } from \"./Games.style\";\r\nimport MaxResult from \"../../Components/MaxResult/MaxResult\";\r\nconst Games = () => {\r\n  const dispatch = useDispatch();\r\n  const [answer, getAnswerFromInput] = useState(\"\");\r\n  const country = useSelector((state) => getRandomCountry(state));\r\n  const countries = useSelector((state) => getCountries(state));\r\n  const countryAnswer = useSelector((state) => getCountryAnswer(state));\r\n  const answers = useSelector((state) => getAnswers(state));\r\n  const totalAnswers = useSelector((state) => getTotalAnswers(state));\r\n  const rate = useSelector((state) => getRate(state));\r\n  const gameStatus = useSelector((state) => getGameStatus(state));\r\n  const maxResult = useSelector((state) => getTotalMax(state));\r\n\r\n  // show or hidden our tips. \r\n  const [isShowTips, setShow] = useState(false);\r\n  const showTip = () => {\r\n    setShow((prevShowTips) => !prevShowTips);\r\n  };\r\n\r\n  //get random country from our country array\r\n  const getRandomElem = () => {\r\n    const randomCountryValue = getRandomData(countries);\r\n    dispatch(setRandomCountry(randomCountryValue));\r\n    if (answer) {\r\n      dispatch(setCountryAnswer(null));\r\n    }\r\n  };\r\n\r\n  //start new game\r\n  const beginNewGame = () => {\r\n    dispatch(startNewGame(country));\r\n  };\r\n\r\n  // dispatch answer we type in input to compare it to our random country name\r\n  const getAnswer = (answer, country) => {\r\n    if (answer && country) {\r\n      dispatch(setCountryAnswer(answer, country));\r\n      getAnswerFromInput(\"\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <GamesMainWrapper>\r\n      <MaxResult maxResult={maxResult} />\r\n      <GamesWrapper>\r\n        <Input\r\n          getInputName={getAnswerFromInput}\r\n          value={answer}\r\n          disabled={country && !countryAnswer ? false : true}\r\n          placeholder={\r\n            !country\r\n              ? \"please click start\"\r\n              : \"type supposed name of the country\"\r\n          }\r\n        />\r\n        {country && (\r\n          <div>\r\n            <GamesImgWrapper>\r\n              <StyledImg src={country.flag} alt=\"\"></StyledImg>\r\n            </GamesImgWrapper>\r\n            {countryAnswer && (\r\n              <AnswerMainWrapper>\r\n                <Answer answer={countryAnswer} country={country} type=\"name\" />\r\n              </AnswerMainWrapper>\r\n            )}\r\n          </div>\r\n        )}\r\n        {gameStatus === \"run\" ? (\r\n          <ButtonWrapper>\r\n            <Button\r\n              onClick={getRandomElem}\r\n              disabled={country && !countryAnswer ? true : false}>\r\n              {country ? \"Next\" : \"Start\"}{\" \"}\r\n            </Button>\r\n            <Button\r\n              onClick={() => getAnswer(answer, country)}\r\n              disabled={!answer}>\r\n              Check Answer\r\n            </Button>\r\n\r\n            <Button onClick={beginNewGame} bgColor=\"royalBlue\">\r\n              New Game\r\n            </Button>\r\n          </ButtonWrapper>\r\n        ) : (\r\n          <ButtonWrapper>\r\n            <Button onClick={beginNewGame}>New Game</Button>\r\n          </ButtonWrapper>\r\n        )}\r\n        <Results\r\n          answers={answers}\r\n          gameStatus={gameStatus}\r\n          rate={rate}\r\n          totalAnswers={totalAnswers}\r\n        />\r\n        {\r\n          <Button\r\n            bgColor=\"#7da47d\"\r\n            color=\"white\"\r\n            disabled={country ? false : true}\r\n            onClick={showTip}>\r\n            {isShowTips ? \"Hide Tips\" : \"Show Tips\"}\r\n          </Button>\r\n        }\r\n        {isShowTips && country && <Tips country={country} />}\r\n      </GamesWrapper>\r\n    </GamesMainWrapper>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","import {createGlobalStyle} from \"styled-components\"\r\nimport {sizes} from \"./styles.function\"\r\n export  const GlobalStyles = createGlobalStyle `\r\n * {\r\n     margin: 0;\r\n     padding: 0;\r\n     box-sizing:border-box;\r\n }\r\n\r\n @media (max-width: ${sizes.tablet}px) {\r\n     html {\r\n         font-size:0.9rem;\r\n     }\r\n }\r\n `","\r\nexport const themes = [\r\n\r\n  {\r\n    primaryColor: `#d2ab66`,\r\n    secondaryColor: `#90632c`,\r\n    thirdColor: `#fae07f`,\r\n    fourthColor: `white`,\r\n    thirdColorHover: `#ffefb2 `,\r\n    paginationColor: `white`\r\n  },\r\n  {\r\n    primaryColor: `black`,\r\n    secondaryColor: `orange`,\r\n    thirdColor: ` #e8e8e8`,\r\n    fourthColor: `white`,\r\n    thirdColorHover: `white`,\r\n    paginationColor: `white`\r\n  },\r\n\r\n  {\r\n    primaryColor: `#99b7af`,\r\n    secondaryColor: `#214342`,\r\n    thirdColor: ` #788d88 `,\r\n    fourthColor: `white`,\r\n    thirdColorHover: `#b6e6d4`,\r\n    paginationColor: `black`\r\n  },\r\n  {\r\n    primaryColor: `#9598c7`,\r\n    secondaryColor: `#243357`,\r\n    thirdColor: `#7d7d9f`,\r\n    fourthColor: `white`,\r\n    thirdColorHover: `#c9c9fc`,\r\n    paginationColor: `white`\r\n\r\n  },\r\n  {\r\n    primaryColor: `#99627d`,\r\n    secondaryColor: `#491c33`,\r\n    thirdColor: `#c87ea3`,\r\n    fourthColor: `white`,\r\n    thirdColorHover: `#f6b7d7`,\r\n    paginationColor: `white`\r\n\r\n    \r\n  },\r\n  {\r\n    primaryColor: `white`,\r\n    secondaryColor: `#45798d`,\r\n    thirdColor: `#9bb9c5`,\r\n    fourthColor: `black`,\r\n    thirdColorHover: `#e0f0f6`,\r\n    paginationColor: `black`\r\n  },\r\n\r\n]; \r\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAndSetServerData } from \"./redux/actionsCreators/countriesActionCreators\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/Navbar/Header\";\nimport Countries from \"./Pages/Countries/Countries\";\n\nimport CountryDetail from \"./Pages/Countries/CountryDetail\";\nimport { AppWrapper } from \"./Components/StyledComponents/AppWrapper.style\";\nimport Games from \"./Pages/Games/Games\";\nimport { GlobalStyles } from \"./Components/GlobalStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport { themes } from \"./Components/themes\";\n\nconst App = () => {\n  const [theme, setTheme] = useState(themes[0]);\n  const dispatch = useDispatch();\n//fetch all countries from server\n  useEffect(() => {\n    dispatch(fetchAndSetServerData(\"https://restcountries.eu/rest/v2/all\"));\n  }, [dispatch]);\n\n  //change color team using styled components and Provider\n  const onChangeTheme = () => {\n    themes.push(themes[0]);\n    themes.shift(themes[0]);\n    setTheme(themes[0]);\n  };\n  return (\n    <HashRouter>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        <AppWrapper>\n          <Header onChangeTheme={onChangeTheme} />\n\n          <Switch>\n            <Route path=\"/countries\" exact component={Countries} />\n            <Route path=\"/countries/:id\" component={CountryDetail} exact />\n            <Route path=\"/games\" component={Games} exact />\n            {/* <Route path=\"/countries/region/:id\" component={CountriesContainer} /> */}\n            <Route path=\"/\" exact component={Countries} />\n          </Switch>\n        </AppWrapper>\n      </ThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","\r\nimport {FETCH_COUNTRIES,FETCH_COUNTRY, COUNTRY_LOADING,SEARCH_COUNTRY} from \"../actions/countriesActions\"\r\nimport {getFilteredElem} from \"../../utils\"\r\nconst initialState = {\r\n    countries: null,\r\n    currentCountry: null,\r\n    countryLoading: false,\r\n  \r\n}\r\n\r\nconst countryReducer = (state=initialState, action)=> {\r\n switch(action.type) {\r\n  \r\n     case FETCH_COUNTRIES: {\r\n   \r\n         return {\r\n             ...state, countries:action.payload,\r\n             countryLoading:false\r\n         }\r\n     }\r\n\r\n     case FETCH_COUNTRY: {\r\n         return {\r\n             ...state, currentCountry:action.payload\r\n         }\r\n     }\r\n\r\n     case COUNTRY_LOADING: {\r\n         return {\r\n             ...state, countryLoading:action.payload\r\n         }\r\n     }\r\n     case SEARCH_COUNTRY: {\r\n         return {\r\n             ...state, \r\n             countries: getFilteredElem(state.countries, \"name\", action.payload)\r\n\r\n         }\r\n     }\r\n    \r\n     default: {\r\n        return state\r\n     }\r\n     \r\n }\r\n}\r\n\r\nexport default countryReducer;","export const getRightAnswers = (type1, type2, data) => {\r\n    const rightAnswers = type1 === \"rightAnswers\" ? type1 : type2;\r\n    if (type1 === \"rightAnswers\") {\r\n      return (\r\n        ((data[rightAnswers] + 1) / (data[type2] + data[type1] + 1)).toFixed(\r\n          2\r\n        ) * 100\r\n      );\r\n    } else {\r\n      return (\r\n        (data[rightAnswers] / (data[type2] + data[type1] + 1)).toFixed(2) * 100\r\n      );\r\n    }\r\n  };\r\n\r\nexport const getAnswerCount = (type1, type2, data) => {\r\n  return {\r\n    ...data,\r\n    [type1]: data[type1] + 1,\r\n    totalAnswers: data[type1] +  data[type2]+1,\r\n    rate: getRightAnswers(type1, type2, data),\r\n  };\r\n};\r\n\r\n\r\n","import {\r\n  SET_RANDOM_COUNTRY,\r\n  SET_COUNTRY_ANSWER,\r\n  START_NEW_GAME\r\n} from \"../actions/games.actions\";\r\n\r\nimport {getAnswerCount,getRightAnswers} from \"../redux-utils\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst INITIAL_STATE = {\r\n  countryAnswer: null,\r\n  randomCountry: null,\r\n  answers: {\r\n    rightAnswers: 0,\r\n    wrongAnswers: 0,\r\n    totalAnswers: 0,\r\n    rate: 0,\r\n  },\r\n  gameStatus: \"\",\r\n  gamesArchive:{\r\n\r\n  }\r\n\r\n};\r\nconst gamesReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_RANDOM_COUNTRY: {\r\n      return {\r\n        ...state,\r\n        randomCountry: action.payload,\r\n        countryAnswer: null,\r\n      };\r\n    }\r\n    \r\n    case SET_COUNTRY_ANSWER: {\r\n      const answersData=state.answers\r\n      const rightAnswers=\"rightAnswers\";\r\n      const wrongAnswers=\"wrongAnswers\";\r\n \r\n      if(state.answers.totalAnswers+1<3) {\r\n\r\n        if (action.answer.toLowerCase() === action.country.name.toLowerCase()) {\r\n          return {\r\n            ...state,\r\n            countryAnswer: action.answer,\r\n   \r\n            answers: getAnswerCount(rightAnswers, wrongAnswers, answersData)\r\n\r\n          };\r\n        } else {\r\n            \r\n          return {\r\n              \r\n            ...state,\r\n            countryAnswer: action.answer,\r\n            answers: getAnswerCount( wrongAnswers,rightAnswers, answersData) \r\n\r\n\r\n          };\r\n        }\r\n      \r\n      }\r\n      else {\r\n         const id = uuidv4()\r\n \r\n        if (action.answer.toLowerCase() === action.country.name.toLowerCase()) {\r\n\r\n          return {\r\n            ...state,\r\n            countryAnswer: action.answer,\r\n            gameStatus: \"finish\",\r\n            answers: getAnswerCount( rightAnswers,wrongAnswers, answersData),\r\n            gamesArchive: {\r\n              ...state.gamesArchive,[id]:{\r\n                id:id,\r\n                rate:getRightAnswers( \"rightAnswers\", \"wrongAnswers\", answersData),\r\n              }\r\n            }\r\n          };\r\n        } else {  \r\n          return {\r\n\r\n            ...state,\r\n            countryAnswer: action.answer,\r\n            gameStatus: \"finish\",\r\n            answers: getAnswerCount( wrongAnswers, rightAnswers, answersData),\r\n            gamesArchive: {\r\n              ...state.gamesArchive,[id]:{\r\n                id:id,\r\n                rate:getRightAnswers(\"wrongAnswers\", \"rightAnswers\",answersData),\r\n              }\r\n            }\r\n \r\n          };\r\n        }\r\n\r\n      }\r\n    }\r\n    case START_NEW_GAME: {\r\n      return {\r\n        \r\n        ...state,\r\n        randomCountry: null,\r\n        countryAnswer: null,\r\n        gameStatus: \"run\",\r\n\r\n        answers: {\r\n          ...state.answers,\r\n            rightAnswers: 0,\r\n            wrongAnswers: 0,\r\n            totalAnswers: 0,\r\n            rate: 0,\r\n          \r\n        }\r\n    \r\n     \r\n\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default gamesReducer;\r\n","import {combineReducers,createStore,applyMiddleware,compose } from \"redux\";\r\nimport countryReducer from \"./reducers/countryReducer\";\r\nimport gamesReducer from \"./reducers/gamesReducers\";\r\nimport logger from  \"redux-logger\";\r\nimport thunk from \"redux-thunk\"\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\ncountry:countryReducer,\r\ngames:gamesReducer \r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk,logger)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\n\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}